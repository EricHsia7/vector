{"version":3,"file":"main-37f2faf7.8c3b54b421785efc5dd6.min.js","mappings":"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","sources":["webpack://vector/webpack/universalModuleDefinition","webpack://vector/webpack/runtime/chunk loaded","webpack://vector/./src/graphic/elements/circle.ts","webpack://vector/./src/graphic/elements/ellipse.ts","webpack://vector/./src/graphic/elements/line.ts","webpack://vector/./src/graphic/elements/path.ts","webpack://vector/./src/graphic/elements/polygon.ts","webpack://vector/./src/graphic/elements/polyline.ts","webpack://vector/./src/graphic/elements/rect.ts","webpack://vector/./src/graphic/transformation/index.ts","webpack://vector/./src/graphic/plane/index.ts","webpack://vector/./src/graphic/render/index.ts","webpack://vector/./src/index.ts","webpack://vector/./src/tools/index.ts","webpack://vector/webpack/bootstrap","webpack://vector/webpack/runtime/define property getters","webpack://vector/webpack/runtime/hasOwnProperty shorthand","webpack://vector/webpack/runtime/jsonp chunk loading","webpack://vector/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vector\"] = factory();\n\telse\n\t\troot[\"vector\"] = factory();\n})(self, () => {\nreturn ","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { x, y, cx, cy, r, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index.ts';\nimport { uuidv4 } from '../../tools/index.ts';\n\nexport interface circle {\n  x: x;\n  y: y;\n  cx: cx;\n  cy: cy;\n  r: r;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform;\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildCircle(x: x, y: y, cx: cx, cy: cy, r: r, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): circle {\n  return {\n    x: x || 0,\n    y: y || 0,\n    cx: cx || 0,\n    cy: cy || 0,\n    r: r || 0,\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'circle'\n  };\n}\n","import { cx, cy, rx, ry, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index.ts';\nimport { uuidv4 } from '../../tools/index.ts';\n\nexport interface ellipse {\n  cx: cx;\n  cy: cy;\n  rx: rx;\n  ry: ry;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform;\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildEllipse(cx: cx, cy: cy, rx: rx, ry: ry, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): ellipse {\n  return {\n    cx: cx || 0,\n    cy: cy || 0,\n    rx: rx || 0,\n    ry: ry || 0,\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'ellipse'\n  };\n}\n","import { x, y, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index.ts';\nimport { uuidv4 } from '../../tools/index.ts';\n\nexport interface line {\n  x1: x;\n  y1: y;\n  x2: x;\n  y2: y;\n\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the line\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildLine(x1: x, y1: y, x2: x, y2: y, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): line {\n  return {\n    x1: x1 || 0,\n    y1: y1 || 0,\n    x2: x2 || 0,\n    y2: y2 || 0,\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'line'\n  };\n}\n","import { d, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index.ts';\nimport { uuidv4 } from '../../tools/index.ts';\n\nexport interface path {\n  d: d;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the line\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildPath(d: d, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): path {\n  return {\n    d: d || '',\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'path'\n  };\n}\n","import { points, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index.ts';\nimport { uuidv4 } from '../../tools/index.ts';\n\nexport interface polygon {\n  points: points;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the polyline\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildPolygon(points: points, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): polygon {\n  return {\n    points: points || [],\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'polygon'\n  };\n}\n","import { points, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index.ts';\nimport { uuidv4 } from '../../tools/index.ts';\n\nexport interface polyline {\n  points: points;\n\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the polyline\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildPolyline(points: points, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): polyline {\n  return {\n    points: points || [],\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'polyline'\n  };\n}\n","import { x, y, width, height, rx, ry, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index.ts';\nimport { uuidv4 } from '../../tools/index.ts';\n\nexport interface rect {\n  x: x;\n  y: y;\n  width: width;\n  height: height;\n  rx?: rx;\n  ry?: ry;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the rectangle\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildRect(x: x, y: y, width: width, height: height, rx: rx, ry: ry, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): rect {\n  return {\n    x: x || 0,\n    y: y || 0,\n    width: width || 0,\n    height: height || 0,\n    rx: rx || 0,\n    ry: ry || 0,\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'rect'\n  };\n}\n","import { translate, scale, rotate, skewX, skewY, matrix, rad, transform, coordinate } from '../attributes/index.ts';\n\nexport function createTranslationMatrix(translate: translate): matrix {\n  return [\n    [1, 0, translate.x],\n    [0, 1, translate.y],\n    [0, 0, 1]\n  ];\n}\n\nexport function createScalingMatrix(scale: scale): matrix {\n  return [\n    [scale.x, 0, 0],\n    [0, scale.y, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createRotationMatrix(rotate: rotate): matrix {\n  const rad: rad = (rotate.deg * Math.PI) / 180;\n  return [\n    [Math.cos(rad), -Math.sin(rad), 0],\n    [Math.sin(rad), Math.cos(rad), 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createSkewXMatrix(skewX: skewX): matrix {\n  const rad: rad = (skewX.deg * Math.PI) / 180;\n  return [\n    [1, Math.tan(rad), 0],\n    [0, 1, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createSkewYMatrix(skewY: skewY): matrix {\n  const rad: rad = (skewY.deg * Math.PI) / 180;\n  return [\n    [1, 0, 0],\n    [Math.tan(rad), 1, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function multiplyMatrices(a: matrix, b: matrix): matrix {\n  var result: matrix = [\n    [0, 0, 0],\n    [0, 0, 0],\n    [0, 0, 0]\n  ];\n\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < 3; j++) {\n      for (var k = 0; k < 3; k++) {\n        result[i][j] += a[i][k] * b[k][j];\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function createTransformationMatrix(transform: transform): matrix {\n  var identityMatrix: matrix = [\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1]\n  ];\n  var transformLength = transform.length;\n\n  for (var i = 0; i < transformLength; i++) {\n    var transformationMatrix: matrix;\n    switch (transform[i]?.type) {\n      case 'translate':\n        transformationMatrix = createTranslationMatrix(transform[i]);\n        break;\n      case 'scale':\n        transformationMatrix = createScalingMatrix(transform[i]);\n        break;\n      case 'rotate':\n        transformationMatrix = createRotationMatrix(transform[i]);\n        break;\n      case 'skewX':\n        transformationMatrix = createSkewXMatrix(transform[i]);\n        break;\n      case 'skewY':\n        transformationMatrix = createSkewYMatrix(transform[i]);\n        break;\n      default:\n        transformationMatrix = [\n          [1, 0, 0],\n          [0, 1, 0],\n          [0, 0, 1]\n        ];\n        break;\n    }\n    identityMatrix = multiplyMatrices(transformationMatrix, identityMatrix);\n  }\n  return identityMatrix; // return a new \"identity\" matrix\n}\n\nexport function transformPoints(points: coordinate[], transform: transform): coordinate[] {\n  function applyTransformationMatrix(matrix: matrix, point: coordinate): coordinate {\n    const [x, y, _] = [matrix[0][0] * point.x + matrix[0][1] * point.y + matrix[0][2], matrix[1][0] * point.x + matrix[1][1] * point.y + matrix[1][2], 1];\n    return { x, y };\n  }\n  const transformationMatrix = createTransformationMatrix(transform);\n  return points.map((point) => applyTransformationMatrix(transformationMatrix, point));\n}\n","import { uuidv4 } from '../../tools/index.ts';\nimport { x, y, width, height, id } from '../attributes/index.ts';\nimport { elements } from '../elements/index.ts';\n\ntype root = boolean;\n\nexport interface plane {\n  x: x;\n  y: y;\n  width: width;\n  height: height;\n  root: root;\n  elements: elements;\n  subPlanes: plane[];\n  id: id;\n  type: 'plane';\n}\n\nexport function buildPlane(x: x, y: y, width: width, height: height, root: root, elements: elements, subPlanes: plane[]): plane {\n  return {\n    x: root ? 0 : x || 0,\n    y: root ? 0 : y || 0,\n    width: width || 0,\n    height: height || 0,\n    root: root || false,\n    elements: elements || [],\n    subPlanes: subPlanes || [],\n    id: uuidv4(),\n    type: 'plane'\n  };\n}\n","import { plane } from '../plane/index.ts';\n\nimport { rect } from '../elements/rect.ts';\nimport { circle } from '../elements/circle.ts';\nimport { ellipse } from '../elements/ellipse.ts';\nimport { line } from '../elements/line.ts';\nimport { polyline } from '../elements/polyline.ts';\nimport { polygon } from '../elements/polygon.ts';\n\nimport { createTransformationMatrix } from '../transformation/index.ts';\nimport { points } from '../attributes/index.js';\n\ninterface renderConfig {\n  flattenTransform: boolean;\n}\n\nexport function renderPlaneAsXML(plane: plane, config: renderConfig): string {\n  function renderElements(plane: plane, config: renderConfig): string {\n    var result = '';\n    function renderTransform(transform: transform, config: renderConfig): string {\n      if (config.flattenTransform) {\n        var transformationMatrix = createTransformationMatrix(transform);\n        var result = `matrix(${transformationMatrix[0][0]},${transformationMatrix[1][0]},${transformationMatrix[0][1]},${transformationMatrix[1][1]},${transformationMatrix[0][2]},${transformationMatrix[1][2]})`;\n        return result;\n      } else {\n        var result = [];\n        var transformLength = transform.length;\n        for (var i = 0; i < transformLength; i++) {\n          switch (transform[i]?.type) {\n            case 'translate':\n              result.push(`translate(${transform[i].x},${transform[i].y})`);\n              break;\n            case 'scale':\n              result.push(`scale(${transform[i].x},${transform[i].y})`);\n              break;\n            case 'rotate':\n              result.push(`rotate(${transform[i].deg})`);\n              break;\n            case 'skewX':\n              result.push(`skewX(${transform[i].deg})`);\n              break;\n            case 'skewY':\n              result.push(`skewY(${transform[i].deg})`);\n              break;\n            default:\n              break;\n          }\n        }\n        return result.join(' ');\n      }\n    }\n\n    function renderPoints(points: points, plane: plane): string {\n      return points.map((point) => `${point.x + plane.x},${point.y + plane.y}`).join(' ');\n    }\n\n    function renderD(d: d, plane: plane): string {\n      var result = [];\n      for (var command of d) {\n        switch (command?.type) {\n          case 'M':\n            result.push(`M ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'L':\n            result.push(`L ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'H':\n            result.push(`H ${command.x + plane.x}`);\n            break;\n          case 'V':\n            result.push(`V ${command.y + plane.y}`);\n            break;\n          case 'C':\n            result.push(`C ${command.x1 + plane.x} ${command.y1 + plane.y},${command.x2 + plane.x} ${command.y2 + plane.y},${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'S':\n            result.push(`S ${command.x2 + plane.x} ${command.y2 + plane.y},${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'Q':\n            result.push(`Q ${command.x1 + plane.x} ${command.y1 + plane.y},${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'T':\n            result.push(`T ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'A':\n            result.push(`A ${command.rx} ${command.ry} ${command.xAxisRotation} ${command.largeArcFlag} ${command.sweepFlag} ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'Z':\n            result.push('Z');\n            break;\n          default:\n            break;\n        }\n      }\n      return result.join(' ');\n    }\n\n    function renderRect(rect: rect, plane: plane): string {\n      return `<rect x=\"${rect.x + plane.x}\" y=\"${rect.y + plane.y}\" width=\"${rect.width}\" height=\"${rect.height}\" rx=\"${rect.rx}\" ry=\"${rect.ry}\" fill=\"${rect.fill}\" stroke=\"${rect.stroke}\" stroke-dasharray=\"${rect.strokeDasharray}\" stroke-linecap=\"${rect.strokeLinecap}\" stroke-linejoin=\"${rect.strokeLinejoin}\" transform=\"${renderTransform(rect.transform, config)}\" opacity=\"${rect.opacity}\" visibility=\"${rect.visibility}\" />`;\n    }\n\n    function renderCircle(circle: circle, plane: plane): string {\n      return `<circle cx=\"${circle.cx + plane.x}\" cy=\"${circle.cy + plane.y}\" r=\"${circle.r}\" fill=\"${circle.fill}\" stroke=\"${circle.stroke}\" stroke-dasharray=\"${circle.strokeDasharray}\" stroke-linecap=\"${circle.strokeLinecap}\" stroke-linejoin=\"${circle.strokeLinejoin}\" transform=\"${renderTransform(circle.transform, config)}\" opacity=\"${circle.opacity}\" visibility=\"${circle.visibility}\" />`;\n    }\n\n    function renderEllipse(ellipse: ellipse, plane: plane): string {\n      return `<ellipse cx=\"${ellipse.cx + plane.x}\" cy=\"${ellipse.cy + plane.y}\" rx=\"${ellipse.rx}\" ry=\"${ellipse.ry}\" fill=\"${ellipse.fill}\" stroke=\"${ellipse.stroke}\" stroke-dasharray=\"${ellipse.strokeDasharray}\" stroke-linecap=\"${ellipse.strokeLinecap}\" stroke-linejoin=\"${ellipse.strokeLinejoin}\" transform=\"${renderTransform(ellipse.transform, config)}\" opacity=\"${ellipse.opacity}\" visibility=\"${ellipse.visibility}\" />`;\n    }\n\n    function renderLine(line: line, plane: plane): string {\n      return `<line x1=\"${line.x1 + plane.x}\" y1=\"${line.y1 + plane.y}\" x2=\"${line.x2 + plane.x}\" y2=\"${line.y2 + plane.y}\" stroke=\"${line.stroke}\" stroke-dasharray=\"${line.strokeDasharray}\" stroke-linecap=\"${line.strokeLinecap}\" stroke-linejoin=\"${line.strokeLinejoin}\" transform=\"${renderTransform(line.transform, config)}\" opacity=\"${line.opacity}\" visibility=\"${line.visibility}\" />`;\n    }\n\n    function renderPolyline(polyline: polyline, plane: plane): string {\n      return `<polyline points=\"${renderPoints(polyline.points, plane)}\" stroke=\"${polyline.stroke}\" stroke-dasharray=\"${polyline.strokeDasharray}\" stroke-linecap=\"${polyline.strokeLinecap}\" stroke-linejoin=\"${polyline.strokeLinejoin}\" transform=\"${renderTransform(polyline.transform, config)}\" opacity=\"${polyline.opacity}\" visibility=\"${polyline.visibility}\" />`;\n    }\n\n    function renderPolygon(polygon: polygon, plane: plane): string {\n      return `<polygon points=\"${renderPoints(polygon.points, plane)}\" fill=\"${polygon.fill}\" stroke=\"${polygon.stroke}\" stroke-dasharray=\"${polygon.strokeDasharray}\" stroke-linecap=\"${polygon.strokeLinecap}\" stroke-linejoin=\"${polygon.strokeLinejoin}\" transform=\"${renderTransform(polygon.transform, config)}\" opacity=\"${polygon.opacity}\" visibility=\"${polygon.visibility}\" />`;\n    }\n\n    function renderPath(path: path, plane: plane): string {\n      return `<path d=\"${renderD(path.d, plane)}\" fill=\"${path.fill}\" stroke=\"${path.stroke}\" stroke-dasharray=\"${path.strokeDasharray}\" stroke-linecap=\"${path.strokeLinecap}\" stroke-linejoin=\"${path.strokeLinejoin}\" transform=\"${renderTransform(path.transform, config)}\" opacity=\"${path.opacity}\" visibility=\"${path.visibility}\" />`;\n    }\n\n    for (var element of plane.elements) {\n      switch (element?.type) {\n        case 'rect':\n          result += renderRect(element, plane);\n          break;\n        case 'circle':\n          result += renderCircle(element, plane);\n          break;\n        case 'ellipse':\n          result += renderEllipse(element, plane);\n          break;\n        case 'line':\n          result += renderLine(element, plane);\n          break;\n        case 'polyline':\n          result += renderPolyline(element, plane);\n          break;\n        case 'polygon':\n          result += renderPolygon(element, plane);\n          break;\n        case 'path':\n          result += renderPath(element, plane);\n          break;\n        default:\n          break;\n      }\n    }\n\n    for (var subPlane of plane.subPlanes) {\n      result += renderElements(subPlane, config);\n    }\n\n    return `<g>${result}</g>`;\n  }\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${plane.width}\" height=\"${plane.height}\" viewBox=\"0 0 ${plane.width} ${plane.height}\">${renderElements(plane, config)}</svg>`;\n}\n","import { createTransformationMatrix, transformPoints } from './graphic/transformation/index.ts';\nimport { buildRect } from './graphic/elements/rect.ts';\nimport { buildCircle } from './graphic/elements/circle.ts';\nimport { buildPlane } from './graphic/plane/index.ts';\nimport { renderPlaneAsXML } from './graphic/render/index.ts';\nimport { initializeTools } from './editor/tools/index.ts';\n\nimport './editor/index.css';\n\nwindow.vector = {\n  test: {\n    createTransformationMatrix,\n    transformPoints,\n    r: function () {\n      var plane0 = buildPlane(0, 0, 300, 300, true);\n      var rect0 = buildRect(\n        10,\n        20,\n        50,\n        80,\n        10,\n        10,\n        '#000',\n        null,\n        null,\n        null,\n        null,\n        null,\n        [\n          { type: 'rotate', deg: 20 },\n          { type: 'translate', x: 90, y: 40 }\n        ],\n        1,\n        null\n      );\n      plane0.elements.push(rect0);\n      var plane1 = buildPlane(5, 5, 60, 60, false, null, null);\n      var rect1 = buildRect(5, 5, 50, 50, 5, 5, '#000');\n      var circle0 = buildCircle(0, 0, 20, 20, 20, '#000', null, null, null, null, null, [{ type: 'scale', x: 1.5, y: 1.2 }], 0.8, null);\n      plane1.elements.push(rect1);\n      plane1.elements.push(circle0);\n      plane0.subPlanes.push(plane1);\n      console.log(JSON.stringify(plane0));\n      console.log(\n        renderPlaneAsXML(plane0, {\n          flattenTransform: false\n        })\n      );\n    }\n  },\n  initialize: function () {\n    initializeTools();\n    console.log(0);\n  }\n};\n\nexport default window.vector;\n","export const { v4: uuidv4 } = require('uuid');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t509: 0,\n\t614: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvector\"] = self[\"webpackChunkvector\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [271,614], () => (__webpack_require__(943)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["root","factory","exports","module","define","amd","self","deferred","buildCircle","x","y","cx","cy","r","fill","stroke","strokeWidth","strokeDasharray","strokeLinecap","strokeLinejoin","transform","opacity","visibility","id","uuidv4","type","buildEllipse","rx","ry","buildLine","x1","y1","x2","y2","buildPath","d","buildPolygon","points","buildPolyline","buildRect","width","height","createSkewXMatrix","skewX","rad","deg","Math","PI","tan","createSkewYMatrix","skewY","multiplyMatrices","a","b","result","i","j","k","createTransformationMatrix","rotate","scale","translate","identityMatrix","transformLength","length","_transform$i","transformationMatrix","cos","sin","buildPlane","elements","subPlanes","renderPlaneAsXML","plane","config","concat","renderElements","renderTransform","flattenTransform","push","join","renderPoints","map","point","renderRect","rect","renderCircle","circle","renderEllipse","ellipse","renderLine","line","renderPolyline","polyline","renderPolygon","polygon","renderPath","path","_step","_iterator","_createForOfIteratorHelper","s","n","done","_command","command","value","xAxisRotation","largeArcFlag","sweepFlag","err","e","f","renderD","_step2","_iterator2","_element","element","_step3","_iterator3","window","vector","test","transformPoints","matrix","applyTransformationMatrix","plane0","rect0","plane1","rect1","circle0","console","log","JSON","stringify","initialize","initializeTools","require","v4","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","Object","keys","every","key","splice","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","forEach","bind","__webpack_exports__"],"sourceRoot":""}