{"version":3,"file":"3c3a50edb3f235eaf0fe.min.js","mappings":"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","sources":["webpack://vector/./src/graphic/elements/circle.ts","webpack://vector/./src/graphic/elements/ellipse.ts","webpack://vector/./src/graphic/elements/line.ts","webpack://vector/./src/graphic/elements/path.ts","webpack://vector/./src/graphic/elements/polygon.ts","webpack://vector/./src/graphic/elements/polyline.ts","webpack://vector/./src/graphic/elements/rect.ts","webpack://vector/./src/graphic/plane/index.ts","webpack://vector/./src/graphic/render/index.ts","webpack://vector/./src/graphic/transformation/index.ts","webpack://vector/./src/new_document/index.ts","webpack://vector/./src/utilities/lazy-css.ts","webpack://vector/./src/index.ts","webpack://vector/./src/utilities/index.ts"],"sourcesContent":["import { x, y, cx, cy, r, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index';\nimport { uuidv4 } from '../../utilities/index';\n\nexport interface circle {\n  x: x;\n  y: y;\n  cx: cx;\n  cy: cy;\n  r: r;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform;\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildCircle(x: x, y: y, cx: cx, cy: cy, r: r, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): circle {\n  return {\n    x: x || 0,\n    y: y || 0,\n    cx: cx || 0,\n    cy: cy || 0,\n    r: r || 0,\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'circle'\n  };\n}\n","import { cx, cy, rx, ry, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType, x, y } from '../attributes/index';\nimport { uuidv4 } from '../../utilities/index';\n\nexport interface ellipse {\n  x: x;\n  y: y;\n  cx: cx;\n  cy: cy;\n  rx: rx;\n  ry: ry;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform;\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildEllipse(x: x, y: y, cx: cx, cy: cy, rx: rx, ry: ry, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): ellipse {\n  return {\n    x: x || 0,\n    y: y || 0,\n    cx: cx || 0,\n    cy: cy || 0,\n    rx: rx || 0,\n    ry: ry || 0,\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'ellipse'\n  };\n}\n","import { x, y, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index';\nimport { uuidv4 } from '../../utilities/index';\n\nexport interface line {\n  x1: x;\n  y1: y;\n  x2: x;\n  y2: y;\n\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the line\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildLine(x1: x, y1: y, x2: x, y2: y, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): line {\n  return {\n    x1: x1 || 0,\n    y1: y1 || 0,\n    x2: x2 || 0,\n    y2: y2 || 0,\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'line'\n  };\n}\n","import { d, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType, point, points } from '../attributes/index';\nimport { uuidv4 } from '../../utilities/index';\nimport { rect } from './rect';\nimport { circle } from './circle';\nimport { ellipse } from './ellipse';\nimport { line } from './line';\nimport { polyline } from './polyline';\nimport { polygon } from './polygon';\nimport { element } from './index';\nimport { transformPoints } from '../transformation/index';\n\nexport interface path {\n  d: d;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the path\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildPath(d: d, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): path {\n  return {\n    d: d || [],\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'path'\n  };\n}\n\nexport function samplePath(path: path, precision: number = 1, flatten: boolean = false): points {\n  const commands = path.d;\n  let points: points = [];\n\n  function interpolateLinear(p0: point, p1: point, precision: number): points {\n    let segmentPoints: points = [];\n    const distance = Math.hypot(p1.x - p0.x, p1.y - p0.y);\n    const step = distance / precision;\n    for (let i = 0; i < step; i++) {\n      const t = Math.min(Math.max(i / step, 0), 1);\n      const x = p0.x + (p1.x - p0.x) * t;\n      const y = p0.y + (p1.y - p0.y) * t;\n      segmentPoints.push({ x, y });\n    }\n    return segmentPoints;\n  }\n\n  function interpolateCubicBezier(p0: point, c1: point, c2: point, p1: point, precision: number): points {\n    let segmentPoints: points = [];\n    const distance = Math.hypot(p1.x - p0.x, p1.y - p0.y);\n    const step = distance / precision;\n    for (let i = 0; i < step; i++) {\n      const t = Math.min(Math.max(i / step, 0), 1);\n      const x = Math.pow(1 - t, 3) * p0.x + 3 * Math.pow(1 - t, 2) * t * c1.x + 3 * (1 - t) * Math.pow(t, 2) * c2.x + Math.pow(t, 3) * p1.x;\n      const y = Math.pow(1 - t, 3) * p0.y + 3 * Math.pow(1 - t, 2) * t * c1.y + 3 * (1 - t) * Math.pow(t, 2) * c2.y + Math.pow(t, 3) * p1.y;\n      segmentPoints.push({ x, y });\n    }\n    return segmentPoints;\n  }\n\n  function interpolateQuadraticBezier(p0: point, c: point, p1: point, precision: number): points {\n    let segmentPoints: points = [];\n    const distance = Math.hypot(p1.x - p0.x, p1.y - p0.y);\n    const step = distance / precision;\n    for (let i = 0; i < step; i++) {\n      const t = Math.min(Math.max(i / step, 0), 1);\n      const x = Math.pow(1 - t, 2) * p0.x + 2 * (1 - t) * t * p1.x + Math.pow(t, 2) * c.x;\n      const y = Math.pow(1 - t, 2) * p0.y + 2 * (1 - t) * t * p1.y + Math.pow(t, 2) * c.y;\n      segmentPoints.push({ x, y });\n    }\n    return segmentPoints;\n  }\n\n  function interpolateArc(p0: point, rx: number, ry: number, xAxisRotation: number, largeArcFlag: boolean, sweepFlag: boolean, p1: point, precision: number): points {\n    const distance = Math.hypot(p1.x - p0.x, p1.y - p0.y);\n    const step = Math.round(distance / precision);\n    /**\n     * Interpolates points on an arc defined by the SVG path command \"A\".\n     *\n     * Parameters:\n     * - rx, ry: Radii of the ellipse.\n     * - xAxisRotation: Rotation of the ellipse's x-axis in degrees.\n     * - largeArcFlag: 1 for the large arc, 0 for the small arc.\n     * - sweepFlag: 1 for clockwise, 0 for counterclockwise.\n     * - start, end: {x, y} coordinates of the start and end points.\n     * - numPoints: Number of points to interpolate along the arc.\n     *\n     * Returns:\n     * - Array of {x, y} pairs representing the interpolated points.\n     */\n\n    // Convert rotation to radians\n    const xAxisRotationRad = (xAxisRotation * Math.PI) / 180;\n\n    // Translate start and end points to center the ellipse at origin\n    const dx = (p0.x - p1.x) / 2;\n    const dy = (p0.y - p1.y) / 2;\n    const cosPhi = Math.cos(xAxisRotationRad);\n    const sinPhi = Math.sin(xAxisRotationRad);\n\n    const x1Prime = cosPhi * dx + sinPhi * dy;\n    const y1Prime = -sinPhi * dx + cosPhi * dy;\n\n    // Corrected radii to ensure proper scaling\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n    const lambdaFactor = Math.pow(x1Prime, 2) / Math.pow(rx, 2) + Math.pow(y1Prime, 2) / Math.pow(ry, 2);\n    if (lambdaFactor > 1) {\n      rx *= Math.sqrt(lambdaFactor);\n      ry *= Math.sqrt(lambdaFactor);\n    }\n\n    // Compute center of the ellipse\n    let numerator = Math.pow(rx, 2) * Math.pow(ry, 2) - Math.pow(rx, 2) * Math.pow(y1Prime, 2) - Math.pow(ry, 2) * Math.pow(x1Prime, 2);\n    const denominator = Math.pow(rx, 2) * Math.pow(y1Prime, 2) + Math.pow(ry, 2) * Math.pow(x1Prime, 2);\n    if (numerator < 0) numerator = 0; // Handle rounding issues\n\n    let factor = Math.sqrt(numerator / denominator);\n    if (largeArcFlag !== sweepFlag) {\n      factor = -factor;\n    }\n\n    const cxPrime = (factor * rx * y1Prime) / ry;\n    const cyPrime = (-factor * ry * x1Prime) / rx;\n\n    const cx = cosPhi * cxPrime - sinPhi * cyPrime + (p0.x + p1.x) / 2;\n    const cy = sinPhi * cxPrime + cosPhi * cyPrime + (p0.y + p1.y) / 2;\n\n    // Compute start and end angles\n    const theta1 = Math.atan2((y1Prime - cyPrime) / ry, (x1Prime - cxPrime) / rx);\n    let deltaTheta = Math.atan2((-y1Prime - cyPrime) / ry, (-x1Prime - cxPrime) / rx) - theta1;\n\n    if (sweepFlag === 0 && deltaTheta > 0) {\n      deltaTheta -= 2 * Math.PI;\n    } else if (sweepFlag === 1 && deltaTheta < 0) {\n      deltaTheta += 2 * Math.PI;\n    }\n\n    // Generate points along the arc\n    const t = Array.from({ length: step }, (_, i) => i / (step - 1));\n    const angles = t.map((ti) => theta1 + deltaTheta * ti);\n\n    const segmentPoints = angles.map((angle) => {\n      const x = cx + rx * Math.cos(angle) * cosPhi - ry * Math.sin(angle) * sinPhi;\n      const y = cy + rx * Math.cos(angle) * sinPhi + ry * Math.sin(angle) * cosPhi;\n      return { x, y };\n    });\n    return segmentPoints;\n  }\n\n  let currentPoint: point = { x: 0, y: 0 };\n  let previousControlPoint: point | null = null;\n\n  for (const command of commands) {\n    switch (command.type) {\n      case 'M':\n        currentPoint = { x: command.x, y: command.y };\n        points.push(currentPoint);\n        previousControlPoint = null;\n        break;\n      case 'L':\n        const lineEnd = { x: command.x, y: command.y };\n        points.push(...interpolateLinear(currentPoint, lineEnd, precision));\n        currentPoint = lineEnd;\n        previousControlPoint = null;\n        break;\n      case 'H':\n        const horizontalEnd = { x: command.x, y: currentPoint.y };\n        points.push(...interpolateLinear(currentPoint, horizontalEnd, precision));\n        currentPoint = horizontalEnd;\n        previousControlPoint = null;\n        break;\n      case 'V':\n        const verticalEnd = { x: currentPoint.x, y: command.y };\n        points.push(...interpolateLinear(currentPoint, verticalEnd, precision));\n        currentPoint = verticalEnd;\n        previousControlPoint = null;\n        break;\n      case 'C':\n        const cubicStart = currentPoint;\n        const cubicControl1 = { x: command.x1, y: command.y1 };\n        const cubicControl2 = { x: command.x2, y: command.y2 };\n        const cubicEnd = { x: command.x, y: command.y };\n        points.push(...interpolateCubicBezier(cubicStart, cubicControl1, cubicControl2, cubicEnd, precision));\n        currentPoint = cubicEnd;\n        previousControlPoint = cubicControl2;\n        break;\n      case 'S':\n        const smoothStart = currentPoint;\n        const smoothControl1 = previousControlPoint ? { x: 2 * smoothStart.x - previousControlPoint.x, y: 2 * smoothStart.y - previousControlPoint.y } : smoothStart;\n        const smoothControl2 = { x: command.x2, y: command.y2 };\n        const smoothEnd = { x: command.x, y: command.y };\n        points.push(...interpolateCubicBezier(smoothStart, smoothControl1, smoothControl2, smoothEnd, precision));\n        currentPoint = smoothEnd;\n        previousControlPoint = smoothControl2;\n        break;\n      case 'Q':\n        const quadStart = currentPoint;\n        const quadControl = { x: command.x, y: command.y };\n        const quadEnd = { x: command.x1, y: command.y1 };\n        points.push(...interpolateQuadraticBezier(quadStart, quadControl, quadEnd, precision));\n        currentPoint = quadEnd;\n        previousControlPoint = quadControl;\n        break;\n      case 'T':\n        const smoothQuadStart = currentPoint;\n        const smoothQuadControl = previousControlPoint ? { x: 2 * smoothQuadStart.x - previousControlPoint.x, y: 2 * smoothQuadStart.y - previousControlPoint.y } : smoothQuadStart;\n        const smoothQuadEnd = { x: command.x, y: command.y };\n        points.push(...interpolateQuadraticBezier(smoothQuadStart, smoothQuadControl, smoothQuadEnd, precision));\n        currentPoint = smoothQuadEnd;\n        previousControlPoint = smoothQuadControl;\n        break;\n      case 'A':\n        const arcStart = currentPoint;\n        const arcEnd = { x: command.x, y: command.y };\n        points.push(...interpolateArc(arcStart, command.rx, command.ry, command.xAxisRotation, command.largeArcFlag, command.sweepFlag, arcEnd, precision));\n        currentPoint = arcEnd;\n        previousControlPoint = null;\n        break;\n      case 'Z':\n        if (points.length > 0) {\n          points.push(points[0]); // Close path by connecting to the start\n        }\n        previousControlPoint = null;\n        break;\n      default:\n        throw new Error(`Unsupported command type: ${command.type}`);\n    }\n  }\n  if (flatten) {\n    if (typeof path.transform === 'object' && Array.isArray(path.transform)) {\n      if (path.transform.length > 0) {\n        points = transformPoints(points, path.transform);\n      }\n    }\n  }\n  return points;\n}\n\nexport function smoothPath(path: path): path {\n  function simplifyPoints(points: points, tolerance: number): points {\n    function distanceToSegment(point: point, start: point, end: point): number {\n      let dx = end.x - start.x;\n      let dy = end.y - start.y;\n      let d = dx * dx + dy * dy;\n      let t = ((point.x - start.x) * dx + (point.y - start.y) * dy) / d;\n\n      if (t < 0) {\n        dx = point.x - start.x;\n        dy = point.y - start.y;\n      } else if (t > 1) {\n        dx = point.x - end.x;\n        dy = point.y - end.y;\n      } else {\n        var closestPoint = { x: start.x + t * dx, y: start.y + t * dy };\n        dx = point.x - closestPoint.x;\n        dy = point.y - closestPoint.y;\n      }\n\n      return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    if (points.length < 3) {\n      return points;\n    }\n\n    let dmax = 0;\n    let index = 0;\n\n    // Find the point with the maximum distance\n    for (let i = 1; i < points.length - 1; i++) {\n      let d = distanceToSegment(points[i], points[0], points[points.length - 1]);\n      if (d > dmax) {\n        index = i;\n        dmax = d;\n      }\n    }\n\n    // If max distance is greater than tolerance, split the curve\n    if (dmax > tolerance) {\n      let leftPoints = points.slice(0, index + 1);\n      let rightPoints = points.slice(index);\n      let simplifiedLeft = simplifyPoints(leftPoints, tolerance);\n      let simplifiedRight = simplifyPoints(rightPoints, tolerance);\n      return simplifiedLeft.slice(0, simplifiedLeft.length - 1).concat(simplifiedRight);\n    } else {\n      return [points[0], points[points.length - 1]];\n    }\n  }\n\n  const points = samplePath(path, 1);\n  const simplifiedPoints = simplifyPoints(points, 1);\n  const simplifiedPointsLength = simplifiedPoints.length;\n  let simplifiedCommands = [];\n\n  for (let i = 0; i < simplifiedPointsLength; i++) {\n    const currentSimplifiedPoint = simplifiedPoints[i];\n    const nextSimplifiedPoint = simplifiedPoints[i + 1] || currentSimplifiedPoint;\n    if (i === 0) {\n      simplifiedCommands.push({ type: 'M', x: currentSimplifiedPoint.x, y: currentSimplifiedPoint.y });\n    } else {\n      if (i === simplifiedPointsLength - 1) {\n        simplifiedCommands.push({ type: 'L', x: currentSimplifiedPoint.x, y: currentSimplifiedPoint.y });\n      } else {\n        simplifiedCommands.push({ type: 'Q', x1: currentSimplifiedPoint.x, y1: currentSimplifiedPoint.y, x: (currentSimplifiedPoint.x + nextSimplifiedPoint.x) / 2, y: (currentSimplifiedPoint.y + nextSimplifiedPoint.y) / 2 });\n      }\n    }\n  }\n  path.d = simplifiedCommands;\n  return path;\n}\n\nexport function buildPathFromElement(element: element): path {\n  function rectToCommands(element: rect): d {\n    const x = element.x;\n    const y = element.y;\n    const width = element.width;\n    const height = element.height;\n    let rx = element.rx || 0;\n    let ry = element.ry || 0;\n\n    let commands: d = [];\n    if (rx === 0 && ry === 0) {\n      commands.push({ type: 'M', x: x, y: y });\n      commands.push({ type: 'H', x: x + width });\n      commands.push({ type: 'V', y: y + height });\n      commands.push({ type: 'H', x: x });\n      commands.push({ type: 'Z' });\n    } else {\n      rx = rx || ry;\n      ry = ry || rx;\n      commands.push({ type: 'M', x: x + rx, y: y });\n      commands.push({ type: 'H', x: x + width - rx });\n      commands.push({ type: 'A', rx: rx, ry: ry, xAxisRotation: 0, largeArcFlag: 0, sweepFlag: 1, x: x + width, y: y + ry });\n      commands.push({ type: 'V', y: y + height - ry });\n      commands.push({ type: 'A', rx: rx, ry: ry, xAxisRotation: 0, largeArcFlag: 0, sweepFlag: 1, x: x + width - rx, y: y + height });\n      commands.push({ type: 'H', x: x + rx });\n      commands.push({ type: 'A', rx: rx, ry: ry, xAxisRotation: 0, largeArcFlag: 0, sweepFlag: 1, x: x, y: y + height - ry });\n      commands.push({ type: 'V', y: y + ry });\n      commands.push({ type: 'A', rx: rx, ry: ry, xAxisRotation: 0, largeArcFlag: 0, sweepFlag: 1, x: x + rx, y: y });\n      commands.push({ type: 'Z' });\n    }\n    return commands;\n  }\n\n  function circleToCommands(element: circle): d {\n    const cx = element.cx;\n    const cy = element.cy;\n    const r = element.r;\n    let commands: d = [];\n    commands.push({ type: 'M', x: cx - r, y: cy });\n    commands.push({ type: 'A', rx: r, ry: r, xAxisRotation: 0, largeArcFlag: 1, sweepFlag: 0, x: cx + r, y: cy });\n    commands.push({ type: 'A', rx: r, ry: r, xAxisRotation: 0, largeArcFlag: 1, sweepFlag: 0, x: cx - r, y: cy });\n    commands.push({ type: 'Z' });\n    return commands;\n  }\n\n  function ellipseToCommands(element: ellipse): d {\n    const cx = element.cx;\n    const cy = element.cy;\n    const rx = element.rx;\n    const ry = element.ry;\n    let commands: d = [];\n    commands.push({ type: 'M', x: cx - rx, y: cy });\n    commands.push({ type: 'A', rx: rx, ry: ry, xAxisRotation: 0, largeArcFlag: 1, sweepFlag: 0, x: cx + rx, y: cy });\n    commands.push({ type: 'A', rx: rx, ry: ry, xAxisRotation: 0, largeArcFlag: 1, sweepFlag: 0, x: cx - rx, y: cy });\n    commands.push({ type: 'Z' });\n    return commands;\n  }\n\n  function lineToCommands(element: line): d {\n    const x1 = element.x1;\n    const y1 = element.y1;\n    const x2 = element.x2;\n    const y2 = element.y2;\n    let commands: d = [];\n    commands.push({ type: 'M', x: x1, y: y1 });\n    commands.push({ type: 'L', x: x2, y: y2 });\n    return commands;\n  }\n\n  function polyToCommands(element: polyline | polygon): d {\n    const points = element.points;\n    let commands: d = [];\n    let index = 0;\n    for (const point of points) {\n      const x = point.x;\n      const y = point.y;\n      if (index === 0) {\n        commands.push({ type: 'M', x: x, y: y });\n      } else {\n        commands.push({ type: 'L', x: x, y: y });\n      }\n      index += 1;\n    }\n    if (element.type === 'polygon') {\n      commands.push({ type: 'Z' });\n    }\n    return commands;\n  }\n  let commands = [];\n  switch (element.type) {\n    case 'rect':\n      commands = rectToCommands(element);\n      break;\n    case 'circle':\n      commands = circleToCommands(element);\n      break;\n    case 'ellipse':\n      commands = ellipseToCommands(element);\n      break;\n    case 'line':\n      commands = lineToCommands(element);\n      break;\n    case 'polyline':\n      commands = polyToCommands(element);\n      break;\n    case 'polygon':\n      commands = polyToCommands(element);\n      break;\n    case 'path':\n      commands = element.d;\n      break;\n    default:\n      throw new Error(`Unsupported element: ${element?.type}`);\n  }\n  return buildPath(commands, element?.fill, element?.stroke, element?.strokeWidth, element?.strokeDasharray, element?.strokeLinecap, element?.strokeLinejoin, element?.transform, element?.opacity, element?.visibility);\n}\n","import { points, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index';\nimport { uuidv4 } from '../../utilities/index';\n\nexport interface polygon {\n  points: points;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the polygon\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildPolygon(points: points, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): polygon {\n  return {\n    points: points || [],\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'polygon'\n  };\n}\n","import { points, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index';\nimport { uuidv4 } from '../../utilities/index';\n\nexport interface polyline {\n  points: points;\n\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the polyline\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildPolyline(points: points, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): polyline {\n  return {\n    points: points || [],\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'polyline'\n  };\n}\n","import { x, y, width, height, rx, ry, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index';\nimport { uuidv4 } from '../../utilities/index';\n\nexport interface rect {\n  x: x;\n  y: y;\n  width: width;\n  height: height;\n  rx?: rx;\n  ry?: ry;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the rectangle\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildRect(x: x, y: y, width: width, height: height, rx: rx, ry: ry, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): rect {\n  return {\n    x: x || 0,\n    y: y || 0,\n    width: width || 0,\n    height: height || 0,\n    rx: rx || 0,\n    ry: ry || 0,\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'rect'\n  };\n}\n","import { uuidv4 } from '../../utilities/index';\nimport { x, y, width, height, id } from '../attributes/index';\nimport { elements } from '../elements/index';\n\ntype root = boolean;\n\nexport interface plane {\n  x: x;\n  y: y;\n  width: width;\n  height: height;\n  root: root;\n  elements: elements;\n  subPlanes: Array<plane>;\n  id: id;\n  type: 'plane';\n}\n\nexport function buildPlane(x: x, y: y, width: width, height: height, root: root, elements: elements, subPlanes: Array<plane>): plane {\n  return {\n    x: root ? 0 : x || 0,\n    y: root ? 0 : y || 0,\n    width: width || 0,\n    height: height || 0,\n    root: root || false,\n    elements: elements || [],\n    subPlanes: subPlanes || [],\n    id: uuidv4(),\n    type: 'plane'\n  };\n}\n","import { plane } from '../plane/index';\n\nimport { rect } from '../elements/rect';\nimport { circle } from '../elements/circle';\nimport { ellipse } from '../elements/ellipse';\nimport { line } from '../elements/line';\nimport { polyline } from '../elements/polyline';\nimport { polygon } from '../elements/polygon';\n\nimport { createTransformationMatrix } from '../transformation/index';\nimport { points, transform } from '../attributes/index';\n\ninterface renderConfig {\n  flattenTransform: boolean;\n  exceptID: boolean;\n}\n\nexport function renderPlaneAsXML(plane: plane, config: renderConfig): string {\n  function renderElements(plane: plane, config: renderConfig): string {\n    var result = '';\n    function renderTransform(transform: transform, config: renderConfig): string {\n      if (config.flattenTransform) {\n        var transformationMatrix = createTransformationMatrix(transform);\n        var result = `matrix(${transformationMatrix[0][0]},${transformationMatrix[1][0]},${transformationMatrix[0][1]},${transformationMatrix[1][1]},${transformationMatrix[0][2]},${transformationMatrix[1][2]})`;\n        return result;\n      } else {\n        var result = [];\n        var transformLength: number = transform.length;\n        for (var i = 0; i < transformLength; i++) {\n          switch (transform[i]?.type) {\n            case 'translate':\n              result.push(`translate(${transform[i].x},${transform[i].y})`);\n              break;\n            case 'scale':\n              result.push(`scale(${transform[i].x},${transform[i].y})`);\n              break;\n            case 'rotate':\n              result.push(`rotate(${transform[i].deg})`);\n              break;\n            case 'skewX':\n              result.push(`skewX(${transform[i].deg})`);\n              break;\n            case 'skewY':\n              result.push(`skewY(${transform[i].deg})`);\n              break;\n            default:\n              break;\n          }\n        }\n        return result.join(' ');\n      }\n    }\n\n    function renderPoints(points: points, plane: plane): string {\n      return points.map((point) => `${point.x + plane.x},${point.y + plane.y}`).join(' ');\n    }\n\n    function renderD(d: d, plane: plane): string {\n      var result = [];\n      for (var command of d) {\n        switch (command?.type) {\n          case 'M':\n            result.push(`M ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'L':\n            result.push(`L ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'H':\n            result.push(`H ${command.x + plane.x}`);\n            break;\n          case 'V':\n            result.push(`V ${command.y + plane.y}`);\n            break;\n          case 'C':\n            result.push(`C ${command.x1 + plane.x} ${command.y1 + plane.y},${command.x2 + plane.x} ${command.y2 + plane.y},${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'S':\n            result.push(`S ${command.x2 + plane.x} ${command.y2 + plane.y},${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'Q':\n            result.push(`Q ${command.x1 + plane.x} ${command.y1 + plane.y} ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'T':\n            result.push(`T ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'A':\n            result.push(`A ${command.rx} ${command.ry} ${command.xAxisRotation} ${command.largeArcFlag} ${command.sweepFlag} ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'Z':\n            result.push('Z');\n            break;\n          default:\n            break;\n        }\n      }\n      return result.join(' ');\n    }\n\n    function renderRect(rect: rect, plane: plane): string {\n      var rectWidth: number = Math.abs(rect.width);\n      var rectHeight: number = Math.abs(rect.height);\n      var rectX: number = rect.x;\n      var rectY: number = rect.y;\n      if (rect.width < 0) {\n        rectX -= rectWidth;\n      }\n      if (rect.height < 0) {\n        rectY -= rectHeight;\n      }\n      return `<rect x=\"${rectX + plane.x}\" y=\"${rectY + plane.y}\" width=\"${rectWidth}\" height=\"${rectHeight}\" rx=\"${rect.rx}\" ry=\"${rect.ry}\" fill=\"${rect.fill}\" stroke=\"${rect.stroke}\" stroke-width=\"${rect.strokeWidth}\" stroke-dasharray=\"${rect.strokeDasharray}\" stroke-linecap=\"${rect.strokeLinecap}\" stroke-linejoin=\"${rect.strokeLinejoin}\" transform=\"${renderTransform(rect.transform, config)}\" opacity=\"${rect.opacity}\" visibility=\"${rect.visibility}\" ${config.exceptID ? '' : ` id=\"${rect.id}\" `}/>`;\n    }\n\n    function renderCircle(circle: circle, plane: plane): string {\n      return `<circle cx=\"${circle.cx + plane.x}\" cy=\"${circle.cy + plane.y}\" r=\"${circle.r}\" fill=\"${circle.fill}\" stroke=\"${circle.stroke}\" stroke-width=\"${circle.strokeWidth}\" stroke-dasharray=\"${circle.strokeDasharray}\" stroke-linecap=\"${circle.strokeLinecap}\" stroke-linejoin=\"${circle.strokeLinejoin}\" transform=\"${renderTransform(circle.transform, config)}\" opacity=\"${circle.opacity}\" visibility=\"${circle.visibility}\" ${config.exceptID ? '' : ` id=\"${circle.id}\" `}/>`;\n    }\n\n    function renderEllipse(ellipse: ellipse, plane: plane): string {\n      return `<ellipse cx=\"${ellipse.cx + plane.x}\" cy=\"${ellipse.cy + plane.y}\" rx=\"${ellipse.rx}\" ry=\"${ellipse.ry}\" fill=\"${ellipse.fill}\" stroke=\"${ellipse.stroke}\" stroke-width=\"${ellipse.strokeWidth}\" stroke-dasharray=\"${ellipse.strokeDasharray}\" stroke-linecap=\"${ellipse.strokeLinecap}\" stroke-linejoin=\"${ellipse.strokeLinejoin}\" transform=\"${renderTransform(ellipse.transform, config)}\" opacity=\"${ellipse.opacity}\" visibility=\"${ellipse.visibility}\" ${config.exceptID ? '' : ` id=\"${ellipse.id}\" `}/>`;\n    }\n\n    function renderLine(line: line, plane: plane): string {\n      return `<line x1=\"${line.x1 + plane.x}\" y1=\"${line.y1 + plane.y}\" x2=\"${line.x2 + plane.x}\" y2=\"${line.y2 + plane.y}\" stroke=\"${line.stroke}\" stroke-width=\"${line.strokeWidth}\" stroke-dasharray=\"${line.strokeDasharray}\" stroke-linecap=\"${line.strokeLinecap}\" stroke-linejoin=\"${line.strokeLinejoin}\" transform=\"${renderTransform(line.transform, config)}\" opacity=\"${line.opacity}\" visibility=\"${line.visibility}\" ${config.exceptID ? '' : ` id=\"${line.id}\" `}/>`;\n    }\n\n    function renderPolyline(polyline: polyline, plane: plane): string {\n      return `<polyline points=\"${renderPoints(polyline.points, plane)}\" stroke=\"${polyline.stroke}\" stroke-width=\"${polyline.strokeWidth}\" stroke-dasharray=\"${polyline.strokeDasharray}\" stroke-linecap=\"${polyline.strokeLinecap}\" stroke-linejoin=\"${polyline.strokeLinejoin}\" transform=\"${renderTransform(polyline.transform, config)}\" opacity=\"${polyline.opacity}\" visibility=\"${polyline.visibility}\" ${config.exceptID ? '' : ` id=\"${polyline.id}\" `}/>`;\n    }\n\n    function renderPolygon(polygon: polygon, plane: plane): string {\n      return `<polygon points=\"${renderPoints(polygon.points, plane)}\" fill=\"${polygon.fill}\" stroke=\"${polygon.stroke}\" stroke-width=\"${polygon.strokeWidth}\" stroke-dasharray=\"${polygon.strokeDasharray}\" stroke-linecap=\"${polygon.strokeLinecap}\" stroke-linejoin=\"${polygon.strokeLinejoin}\" transform=\"${renderTransform(polygon.transform, config)}\" opacity=\"${polygon.opacity}\" visibility=\"${polygon.visibility}\" ${config.exceptID ? '' : ` id=\"${polygon.id}\" `}/>`;\n    }\n\n    function renderPath(path: path, plane: plane): string {\n      return `<path d=\"${renderD(path.d, plane)}\" fill=\"${path.fill}\" stroke=\"${path.stroke}\" stroke-width=\"${path.strokeWidth}\" stroke-dasharray=\"${path.strokeDasharray}\" stroke-linecap=\"${path.strokeLinecap}\" stroke-linejoin=\"${path.strokeLinejoin}\" transform=\"${renderTransform(path.transform, config)}\" opacity=\"${path.opacity}\" visibility=\"${path.visibility}\" ${config.exceptID ? '' : ` id=\"${path.id}\" `}/>`;\n    }\n\n    for (var element of plane.elements) {\n      switch (element?.type) {\n        case 'rect':\n          result += renderRect(element, plane);\n          break;\n        case 'circle':\n          result += renderCircle(element, plane);\n          break;\n        case 'ellipse':\n          result += renderEllipse(element, plane);\n          break;\n        case 'line':\n          result += renderLine(element, plane);\n          break;\n        case 'polyline':\n          result += renderPolyline(element, plane);\n          break;\n        case 'polygon':\n          result += renderPolygon(element, plane);\n          break;\n        case 'path':\n          result += renderPath(element, plane);\n          break;\n        default:\n          break;\n      }\n    }\n\n    for (var subPlane of plane.subPlanes) {\n      result += renderElements(subPlane, config);\n    }\n\n    return `<g${config.exceptID ? '' : ` id=\"${plane.id}\"`}>${result}</g>`;\n  }\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${plane.width}\" height=\"${plane.height}\" viewBox=\"0 0 ${plane.width} ${plane.height}\">${renderElements(plane, config)}</svg>`;\n}\n","import { translate, scale, rotate, skewX, skewY, matrix, rad, transform, point, points } from '../attributes/index';\n\nexport function createTranslationMatrix(translate: translate): matrix {\n  return [\n    [1, 0, translate.x],\n    [0, 1, translate.y],\n    [0, 0, 1]\n  ];\n}\n\nexport function createScalingMatrix(scale: scale): matrix {\n  return [\n    [scale.x, 0, 0],\n    [0, scale.y, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createRotationMatrix(rotate: rotate): matrix {\n  const rad: rad = (rotate.deg * Math.PI) / 180;\n  return [\n    [Math.cos(rad), -Math.sin(rad), 0],\n    [Math.sin(rad), Math.cos(rad), 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createSkewXMatrix(skewX: skewX): matrix {\n  const rad: rad = (skewX.deg * Math.PI) / 180;\n  return [\n    [1, Math.tan(rad), 0],\n    [0, 1, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createSkewYMatrix(skewY: skewY): matrix {\n  const rad: rad = (skewY.deg * Math.PI) / 180;\n  return [\n    [1, 0, 0],\n    [Math.tan(rad), 1, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function multiplyMatrices(a: matrix, b: matrix): matrix {\n  var result: matrix = [\n    [0, 0, 0],\n    [0, 0, 0],\n    [0, 0, 0]\n  ];\n\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < 3; j++) {\n      for (var k = 0; k < 3; k++) {\n        result[i][j] += a[i][k] * b[k][j];\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function createTransformationMatrix(transform: transform): matrix {\n  var identityMatrix: matrix = [\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1]\n  ];\n  var transformLength = transform.length;\n\n  for (var i = 0; i < transformLength; i++) {\n    var transformationMatrix: matrix;\n    switch (transform[i]?.type) {\n      case 'translate':\n        transformationMatrix = createTranslationMatrix(transform[i]);\n        break;\n      case 'scale':\n        transformationMatrix = createScalingMatrix(transform[i]);\n        break;\n      case 'rotate':\n        transformationMatrix = createRotationMatrix(transform[i]);\n        break;\n      case 'skewX':\n        transformationMatrix = createSkewXMatrix(transform[i]);\n        break;\n      case 'skewY':\n        transformationMatrix = createSkewYMatrix(transform[i]);\n        break;\n      default:\n        transformationMatrix = [\n          [1, 0, 0],\n          [0, 1, 0],\n          [0, 0, 1]\n        ];\n        break;\n    }\n    identityMatrix = multiplyMatrices(transformationMatrix, identityMatrix);\n  }\n  return identityMatrix; // return a new \"identity\" matrix\n}\n\nexport function transformPoints(points: points, transform: transform): points {\n  function applyTransformationMatrix(matrix: matrix, point: point): point {\n    const [x, y, _] = [matrix[0][0] * point.x + matrix[0][1] * point.y + matrix[0][2], matrix[1][0] * point.x + matrix[1][1] * point.y + matrix[1][2], 1];\n    return { x, y };\n  }\n  const transformationMatrix = createTransformationMatrix(transform);\n  return points.map((point) => applyTransformationMatrix(transformationMatrix, point));\n}\n","import { createVectorDocument, openDocument, vectorDocument } from '../editor/index';\n\nconst newDocumentElement: HTMLElement = document.querySelector('.css_new_document');\nconst newDocumentModalOverlayElement: HTMLElement = document.querySelector('.css_new_document_modal_overlay');\n\nexport function openNewDocument(): void {\n  newDocumentElement.setAttribute('displayed', true);\n  newDocumentModalOverlayElement.setAttribute('displayed', true);\n}\n\nexport function closeNewDocument(): void {\n  newDocumentElement.setAttribute('displayed', false);\n  newDocumentModalOverlayElement.setAttribute('displayed', false);\n}\n\nexport function createDocumentWithInputs(): void {\n  const name: string = String(newDocumentElement.querySelector('#new_document_name').value) || 'Untitled';\n  const width: number = parseInt(newDocumentElement.querySelector('#new_document_width').value) || 64;\n  const height: number = parseInt(newDocumentElement.querySelector('#new_document_height').value) || 64;\n  var creation: vectorDocument = createVectorDocument(width, height, null, null, name);\n  openDocument(creation.id);\n}\n","let lazyCSS = {\n  noto_sans_tc: false,\n  material_symbols: false\n};\n\nexport function loadCSS(url: string, identifier: string): void {\n  if (lazyCSS[identifier] === false) {\n    const link = document.createElement('link');\n    link.setAttribute('href', url);\n    link.setAttribute('rel', 'stylesheet');\n    document.head.appendChild(link);\n    lazyCSS[identifier] = true;\n  }\n}\n","import { createTransformationMatrix, transformPoints } from './graphic/transformation/index';\nimport { buildRect } from './graphic/elements/rect';\nimport { buildCircle } from './graphic/elements/circle';\nimport { buildPlane } from './graphic/plane/index';\nimport { renderPlaneAsXML } from './graphic/render/index';\nimport { initializeTools, switchTool } from './editor/tools/index';\nimport { initializeEditor } from './editor/index';\nimport { openNewDocument, closeNewDocument, createDocumentWithInputs } from './new_document/index';\nimport { switchShapeType } from './editor/tools/shape';\nimport { loadCSS } from './utilities/lazy-css';\nimport { buildPathFromElement, samplePath } from './graphic/elements/path';\n\nimport './theme.css';\nimport './index.css';\nimport './icons.css';\n\nimport './home/index.css';\n\nimport './new_document/index.css';\n\nimport './editor/index.css';\nimport './editor/planes.css';\nimport './editor/tools/index.css';\nimport './editor/tools/shape.css';\n\nwindow.vector = {\n  test: {\n    createTransformationMatrix,\n    transformPoints,\n    r: function () {\n      var plane0 = buildPlane(0, 0, 300, 300, true);\n      var rect0 = buildRect(\n        10,\n        20,\n        50,\n        80,\n        10,\n        10,\n        '#000',\n        null,\n        null,\n        null,\n        null,\n        null,\n        [\n          { type: 'rotate', deg: 20 },\n          { type: 'translate', x: 90, y: 40 }\n        ],\n        1,\n        null\n      );\n      plane0.elements.push(rect0);\n      var plane1 = buildPlane(5, 5, 60, 60, false, null, null);\n      var rect1 = buildRect(5, 5, 50, 50, 5, 5, '#000');\n      var circle0 = buildCircle(0, 0, 20, 20, 20, '#000', null, null, null, null, null, [{ type: 'scale', x: 1.5, y: 1.2 }], 0.8, null);\n      plane1.elements.push(rect1);\n      plane1.elements.push(circle0);\n      plane0.subPlanes.push(plane1);\n      console.log(JSON.stringify(plane0));\n      console.log(\n        renderPlaneAsXML(plane0, {\n          flattenTransform: false,\n          exceptID: false\n        })\n      );\n      for (const element of plane1.elements) {\n        try {\n          let p = buildPathFromElement(element);\n          console.log(element);\n          console.log(p);\n          let P = samplePath(p, 1, true);\n          console.log(P);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    }\n  },\n  toolbar: {\n    switchTool,\n    switchShapeType\n  },\n  documents: {\n    newDocument: {\n      openNewDocument,\n      closeNewDocument,\n      createDocumentWithInputs\n    }\n  },\n  initialize: function () {\n    initializeTools();\n    initializeEditor();\n    console.log(0);\n  },\n  secondlyInitialize: function () {\n    loadCSS('https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@100..900&display=swap', 'noto_sans_tc');\n    loadCSS('https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200', 'material_symbols');\n  }\n};\n\nexport default window.vector;\n","export const { v4: uuidv4 } = require('uuid');\n"],"names":["buildCircle","x","y","cx","cy","r","fill","stroke","strokeWidth","strokeDasharray","strokeLinecap","strokeLinejoin","transform","opacity","visibility","id","uuidv4","type","buildEllipse","rx","ry","buildLine","x1","y1","x2","y2","buildPath","d","samplePath","path","_points","_points2","_points3","_points4","_points5","_points6","_points7","_points8","precision","arguments","length","undefined","flatten","points","interpolateLinear","p0","p1","segmentPoints","step","Math","hypot","i","t","min","max","push","interpolateCubicBezier","c1","c2","pow","interpolateQuadraticBezier","c","interpolateArc","xAxisRotation","largeArcFlag","sweepFlag","distance","round","xAxisRotationRad","PI","dx","dy","cosPhi","cos","sinPhi","sin","x1Prime","y1Prime","abs","lambdaFactor","sqrt","numerator","denominator","factor","cxPrime","cyPrime","theta1","atan2","deltaTheta","Array","from","_","map","ti","angle","_step","currentPoint","previousControlPoint","_iterator","_createForOfIteratorHelper","s","n","done","command","value","lineEnd","apply","_toConsumableArray","horizontalEnd","verticalEnd","cubicStart","cubicControl1","cubicControl2","cubicEnd","smoothStart","smoothControl1","smoothControl2","smoothEnd","quadStart","quadControl","quadEnd","smoothQuadStart","smoothQuadControl","smoothQuadEnd","arcStart","arcEnd","Error","concat","err","e","f","_typeof","isArray","transformPoints","smoothPath","simplifiedPoints","simplifyPoints","tolerance","distanceToSegment","point","start","end","closestPoint","dmax","index","leftPoints","slice","rightPoints","simplifiedLeft","simplifiedRight","simplifiedPointsLength","simplifiedCommands","currentSimplifiedPoint","nextSimplifiedPoint","buildPathFromElement","element","polyToCommands","_step2","commands","_iterator2","width","height","rectToCommands","circleToCommands","ellipseToCommands","lineToCommands","buildPolygon","buildPolyline","buildRect","buildPlane","root","elements","subPlanes","renderPlaneAsXML","plane","config","renderElements","result","renderTransform","flattenTransform","transformationMatrix","createTransformationMatrix","transformLength","_transform$i","deg","join","renderPoints","renderRect","rect","rectWidth","rectHeight","rectX","rectY","exceptID","renderCircle","circle","renderEllipse","ellipse","renderLine","line","renderPolyline","polyline","renderPolygon","polygon","renderPath","_command","renderD","_element","_step3","_iterator3","createSkewXMatrix","skewX","rad","tan","createSkewYMatrix","skewY","multiplyMatrices","a","b","j","k","rotate","scale","translate","identityMatrix","matrix","applyTransformationMatrix","newDocumentElement","document","querySelector","newDocumentModalOverlayElement","lazyCSS","noto_sans_tc","material_symbols","loadCSS","url","identifier","link","createElement","setAttribute","head","appendChild","window","vector","test","plane0","rect0","plane1","rect1","circle0","console","log","JSON","stringify","p","P","toolbar","switchTool","switchShapeType","documents","newDocument","openNewDocument","closeNewDocument","createDocumentWithInputs","name","String","parseInt","creation","createVectorDocument","openDocument","initialize","initializeTools","initializeEditor","secondlyInitialize","require","v4"],"sourceRoot":""}