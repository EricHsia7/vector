{"version":3,"file":"main.c163b676d405d448fb18.min.js","mappings":"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","sources":["webpack://vector/webpack/universalModuleDefinition","webpack://vector/webpack/bootstrap","webpack://vector/webpack/runtime/define property getters","webpack://vector/webpack/runtime/hasOwnProperty shorthand","webpack://vector/./src/graphic/transformation/index.ts","webpack://vector/./src/graphic/elements/rect.ts","webpack://vector/./src/graphic/plane/index.ts","webpack://vector/./src/graphic/render/index.ts","webpack://vector/./src/index.ts","webpack://vector/./src/graphic/elements/circle.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vector\"] = factory();\n\telse\n\t\troot[\"vector\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { translate, scale, rotate, skewX, skewY, matrix, rad, transform, coordinate } from '../attributes/index.ts';\n\nexport function createTranslationMatrix(translate: translate): matrix {\n  return [\n    [1, 0, translate.x],\n    [0, 1, translate.y],\n    [0, 0, 1]\n  ];\n}\n\nexport function createScalingMatrix(scale: scale): matrix {\n  return [\n    [scale.x, 0, 0],\n    [0, scale.y, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createRotationMatrix(rotate: rotate): matrix {\n  const rad: rad = (rotate.deg * Math.PI) / 180;\n  return [\n    [Math.cos(rad), -Math.sin(rad), 0],\n    [Math.sin(rad), Math.cos(rad), 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createSkewXMatrix(skewX: skewX): matrix {\n  const rad: rad = (skewX.deg * Math.PI) / 180;\n  return [\n    [1, Math.tan(rad), 0],\n    [0, 1, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createSkewYMatrix(skewY: skewY): matrix {\n  const rad: rad = (skewY.deg * Math.PI) / 180;\n  return [\n    [1, 0, 0],\n    [Math.tan(rad), 1, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function multiplyMatrices(a: matrix, b: matrix): matrix {\n  var result: matrix = [\n    [0, 0, 0],\n    [0, 0, 0],\n    [0, 0, 0]\n  ];\n\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < 3; j++) {\n      for (var k = 0; k < 3; k++) {\n        result[i][j] += a[i][k] * b[k][j];\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function createTransformationMatrix(transform: transform): matrix {\n  var identityMatrix: matrix = [\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1]\n  ];\n  var transformLength = transform.length;\n\n  for (var i = 0; i < transformLength; i++) {\n    var transformationMatrix: matrix;\n    switch (transform[i]?.type) {\n      case 'translate':\n        transformationMatrix = createTranslationMatrix(transform[i]);\n        break;\n      case 'scale':\n        transformationMatrix = createScalingMatrix(transform[i]);\n        break;\n      case 'rotate':\n        transformationMatrix = createRotationMatrix(transform[i]);\n        break;\n      case 'skewX':\n        transformationMatrix = createSkewXMatrix(transform[i]);\n        break;\n      case 'skewY':\n        transformationMatrix = createSkewYMatrix(transform[i]);\n        break;\n      default:\n        transformationMatrix = [\n          [1, 0, 0],\n          [0, 1, 0],\n          [0, 0, 1]\n        ];\n        break;\n    }\n    identityMatrix = multiplyMatrices(transformationMatrix, identityMatrix);\n  }\n  return identityMatrix; // return a new \"identity\" matrix\n}\n\nexport function transformPoints(points: coordinate[], transform: transform): coordinate[] {\n  function applyTransformationMatrix(matrix: matrix, point: coordinate): coordinate {\n    const [x, y, _] = [matrix[0][0] * point.x + matrix[0][1] * point.y + matrix[0][2], matrix[1][0] * point.x + matrix[1][1] * point.y + matrix[1][2], 1];\n    return { x, y };\n  }\n  const transformationMatrix = createTransformationMatrix(transform);\n  return points.map((point) => applyTransformationMatrix(transformationMatrix, point));\n}\n","import { x, y, width, height, rx, ry, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, elementType } from '../attributes/index.ts';\n\nexport interface rect {\n  x: x;\n  y: y;\n  width: width;\n  height: height;\n  rx?: rx;\n  ry?: ry;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the rectangle\n  opacity?: opacity;\n  visibility?: visibility;\n  type: elementType;\n}\n\nexport function buildRect(x: x, y: y, width: width, height: height, rx: rx, ry: ry, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): rect {\n  return {\n    x: x || 0,\n    y: y || 0,\n    width: width || 0,\n    height: height || 0,\n    rx: rx || 0,\n    ry: ry || 0,\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    type: 'rect'\n  };\n}\n","import { x, y, width, height, rx, ry, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, elementType } from '../attributes/index.ts';\nimport { elements } from '../elements/index.ts';\n\ntype root = boolean;\n\nexport interface plane {\n  x: x;\n  y: y;\n  width: width;\n  height: height;\n  root: root;\n  elements: elements;\n  subPlanes: plane[];\n  type: 'plane';\n}\n\nexport function buildPlane(x: x, y: y, width: width, height: height, root: root, elements: elements, subPlanes: plane[]): plane {\n  return {\n    x: root ? 0 : x || 0,\n    y: root ? 0 : y || 0,\n    width: width || 0,\n    height: height || 0,\n    root: root || false,\n    elements: elements || [],\n    subPlanes: subPlanes || [],\n    type: 'plane'\n  };\n}\n","import { plane } from '../plane/index.ts';\nimport { rect } from '../elements/rect.ts';\nimport { createTransformationMatrix } from '../transformation/index.ts';\n\ninterface renderConfig {\n  flattenTransform: boolean;\n}\n\nexport function renderPlaneAsXML(plane: plane, config: renderConfig): string {\n  function renderElements(plane: plane, config: renderConfig): string {\n    var result = '';\n    function renderTransform(transform: transform, config: renderConfig): string {\n      if (config.flattenTransform) {\n        var transformationMatrix = createTransformationMatrix(transform);\n        var result = `matrix(${transformationMatrix[0][0]},${transformationMatrix[1][0]},${transformationMatrix[0][1]},${transformationMatrix[1][1]},${transformationMatrix[0][2]},${transformationMatrix[1][2]})`;\n        return result;\n      } else {\n        var result = [];\n        var transformLength = transform.length;\n        for (var i = 0; i < transformLength; i++) {\n          switch (transform[i]?.type) {\n            case 'translate':\n              result.push(`translate(${transform[i].x},${transform[i].y})`);\n              break;\n            case 'scale':\n              result.push(`scale(${transform[i].x},${transform[i].y})`);\n              break;\n            case 'rotate':\n              result.push(`rotate(${transform[i].deg})`);\n              break;\n            case 'skewX':\n              result.push(`skewX(${transform[i].deg})`);\n              break;\n            case 'skewY':\n              result.push(`skewY(${transform[i].deg})`);\n              break;\n            default:\n              break;\n          }\n        }\n        return result.join(' ');\n      }\n    }\n    function renderRect(rect: rect, plane: plane): string {\n      return `<rect x=\"${rect.x + plane.x}\" y=\"${rect.y + plane.y}\" width=\"${rect.width}\" height=\"${rect.height}\" rx=\"${rect.rx}\" ry=\"${rect.ry}\" fill=\"${rect.fill}\" stroke=\"${rect.stroke}\" stroke-dasharray=\"${rect.strokeDasharray}\" stroke-linecap=\"${rect.strokeLinecap}\" stroke-linejoin=\"${rect.strokeLinejoin}\" transform=\"${renderTransform(rect.transform, config)}\" opacity=\"${rect.opacity}\" visibility=\"${rect.visibility}\" />`;\n    }\n    for (var element of plane.elements) {\n      switch (element?.type) {\n        case 'rect':\n          result += renderRect(element, plane);\n          break;\n        default:\n          break;\n      }\n    }\n    for (var subPlane of plane.subPlanes) {\n      result += renderElements(subPlane, config);\n    }\n    return `<g>${result}</g>`;\n  }\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${plane.width}\" height=\"${plane.height}\" viewBox=\"0 0 ${plane.width} ${plane.height}\">${renderElements(plane, config)}</svg>`;\n}\n","import { createTransformationMatrix, transformPoints } from './graphic/transformation/index.ts';\nimport { buildRect } from './graphic/elements/rect.ts';\nimport { buildCircle } from './graphic/elements/circle.ts';\nimport { buildPlane } from './graphic/plane/index.ts';\nimport { renderPlaneAsXML } from './graphic/render/index.ts';\n\nwindow.vector = {\n  test: {\n    createTransformationMatrix,\n    transformPoints,\n    r: function () {\n      var plane0 = buildPlane(0, 0, 300, 300, true);\n      var rect0 = buildRect(\n        10,\n        20,\n        50,\n        80,\n        10,\n        10,\n        '#000',\n        null,\n        null,\n        null,\n        null,\n        null,\n        [\n          { type: 'rotate', deg: 20 },\n          { type: 'translate', x: 90, y: 40 }\n        ],\n        1,\n        null\n      );\n      plane0.elements.push(rect0);\n      var plane1 = buildPlane(5, 5, 60, 60, false, null, null);\n      var rect1 = buildRect(5, 5, 50, 50, 5, 5, '#000');\n      var circle0 = buildCircle(20, 20, 20, '#000', null, null, null, null, null, [{ type: 'scale', x: 1.5, y: 1.2 }], 0.8, null);\n      plane1.elements.push(rect1);\n      plane1.elements.push(circle0);\n      plane0.subPlanes.push(plane1);\n      console.log(\n        renderPlaneAsXML(plane0, {\n          flattenTransform: true\n        })\n      );\n    }\n  },\n  initialize: function () {\n    console.log(0);\n  }\n};\n\nexport default window.vector;\n","import { cx, cy, r, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, elementType } from '../attributes/index.ts';\n\nexport interface circle {\n  cx: cx;\n  cy: cy;\n  r: r;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform;\n  opacity?: opacity;\n  visibility?: visibility;\n  type: elementType;\n}\n\nexport function buildCircle(cx: cx, cy: cy, r: r, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): circle {\n  return {\n    cx: cx || 0,\n    cy: cy || 0,\n    r: r || 0,\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    type: 'rect'\n  };\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","createSkewXMatrix","skewX","rad","deg","Math","PI","tan","createSkewYMatrix","skewY","multiplyMatrices","a","b","result","i","j","k","createTransformationMatrix","transform","rotate","scale","translate","identityMatrix","transformLength","length","_transform$i","transformationMatrix","type","x","y","cos","sin","buildRect","width","height","rx","ry","fill","stroke","strokeWidth","strokeDasharray","strokeLinecap","strokeLinejoin","opacity","visibility","buildPlane","elements","subPlanes","renderPlaneAsXML","plane","config","concat","renderElements","renderRect","rect","flattenTransform","push","join","renderTransform","_step","_iterator","_createForOfIteratorHelper","s","n","done","_element","element","value","err","e","f","_step2","_iterator2","window","vector","test","transformPoints","points","map","point","matrix","applyTransformationMatrix","r","plane0","rect0","plane1","rect1","circle0","cx","cy","buildCircle","console","log","initialize"],"sourceRoot":""}