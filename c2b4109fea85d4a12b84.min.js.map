{"version":3,"file":"c2b4109fea85d4a12b84.min.js","mappings":"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","sources":["webpack://vector/./src/graphic/elements/circle.ts","webpack://vector/./src/graphic/elements/ellipse.ts","webpack://vector/./src/graphic/elements/line.ts","webpack://vector/./src/graphic/elements/path.ts","webpack://vector/./src/graphic/elements/polygon.ts","webpack://vector/./src/graphic/elements/polyline.ts","webpack://vector/./src/graphic/elements/rect.ts","webpack://vector/./src/graphic/plane/index.ts","webpack://vector/./src/graphic/render/index.ts","webpack://vector/./src/graphic/transformation/index.ts","webpack://vector/./src/new_document/index.ts","webpack://vector/./src/index.ts","webpack://vector/./src/tools/index.ts"],"sourcesContent":["import { x, y, cx, cy, r, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index';\nimport { uuidv4 } from '../../tools/index';\n\nexport interface circle {\n  x: x;\n  y: y;\n  cx: cx;\n  cy: cy;\n  r: r;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform;\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildCircle(x: x, y: y, cx: cx, cy: cy, r: r, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): circle {\n  return {\n    x: x || 0,\n    y: y || 0,\n    cx: cx || 0,\n    cy: cy || 0,\n    r: r || 0,\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'circle'\n  };\n}\n","import { cx, cy, rx, ry, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType, x, y } from '../attributes/index';\nimport { uuidv4 } from '../../tools/index';\n\nexport interface ellipse {\n  x: x;\n  y: y;\n  cx: cx;\n  cy: cy;\n  rx: rx;\n  ry: ry;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform;\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildEllipse(x: x, y: y, cx: cx, cy: cy, rx: rx, ry: ry, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): ellipse {\n  return {\n    x: x || 0,\n    y: y || 0,\n    cx: cx || 0,\n    cy: cy || 0,\n    rx: rx || 0,\n    ry: ry || 0,\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'ellipse'\n  };\n}\n","import { x, y, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index';\nimport { uuidv4 } from '../../tools/index';\n\nexport interface line {\n  x1: x;\n  y1: y;\n  x2: x;\n  y2: y;\n\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the line\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildLine(x1: x, y1: y, x2: x, y2: y, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): line {\n  return {\n    x1: x1 || 0,\n    y1: y1 || 0,\n    x2: x2 || 0,\n    y2: y2 || 0,\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'line'\n  };\n}\n","import { d, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType, point, points } from '../attributes/index';\nimport { uuidv4 } from '../../tools/index';\n\nexport interface path {\n  d: d;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the path\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildPath(d: d, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): path {\n  return {\n    d: d || [],\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'path'\n  };\n}\n\nexport function samplePath(path: path, precision: number): points {\n  const commands = path.d;\n  let points: points = [];\n\n  function interpolateLinear(p0: point, p1: point, precision: number): points {\n    let segmentPoints: points = [];\n    const distance = Math.hypot(p1.x - p0.x, p1.y - p0.y);\n    const step = distance / precision;\n    for (let i = 0; i < step; i++) {\n      const t = Math.min(Math.max(i / step, 0), 1);\n      const x = p0.x + (p1.x - p0.x) * t;\n      const y = p0.y + (p1.y - p0.y) * t;\n      segmentPoints.push({ x, y });\n    }\n    return segmentPoints;\n  }\n\n  function interpolateCubicBezier(p0: point, c1: point, c2: point, p1: point, precision: number): points {\n    let segmentPoints: points = [];\n    const distance = Math.hypot(p1.x - p0.x, p1.y - p0.y);\n    const step = distance / precision;\n    for (let i = 0; i < step; i++) {\n      const t = Math.min(Math.max(i / step, 0), 1);\n      const x = Math.pow(1 - t, 3) * p0.x + 3 * Math.pow(1 - t, 2) * t * c1.x + 3 * (1 - t) * Math.pow(t, 2) * c2.x + Math.pow(t, 3) * p1.x;\n      const y = Math.pow(1 - t, 3) * p0.y + 3 * Math.pow(1 - t, 2) * t * c1.y + 3 * (1 - t) * Math.pow(t, 2) * c2.y + Math.pow(t, 3) * p1.y;\n      segmentPoints.push({ x, y });\n    }\n    return segmentPoints;\n  }\n\n  function interpolateQuadraticBezier(p0: point, c: point, p1: point, precision: number): points {\n    let segmentPoints: points = [];\n    const distance = Math.hypot(p1.x - p0.x, p1.y - p0.y);\n    const step = distance / precision;\n    for (let i = 0; i < step; i++) {\n      const t = Math.min(Math.max(i / step, 0), 1);\n      const x = Math.pow(1 - t, 2) * p0.x + 2 * (1 - t) * t * p1.x + Math.pow(t, 2) * c.x;\n      const y = Math.pow(1 - t, 2) * p0.y + 2 * (1 - t) * t * p1.y + Math.pow(t, 2) * c.y;\n      segmentPoints.push({ x, y });\n    }\n    return segmentPoints;\n  }\n\n  function interpolateArc(p0: point, rx: number, ry: number, xAxisRotation: number, largeArcFlag: boolean, sweepFlag: boolean, p1: point, step: number): points {\n    let segmentPoints: points = [];\n    for (let t = 0; t <= 1; t += 1 / step) {\n      const theta = t * Math.PI * 2;\n      segmentPoints.push({\n        x: p0.x + rx * Math.cos(theta),\n        y: p0.y + ry * Math.sin(theta)\n      });\n    }\n    return segmentPoints;\n  }\n\n  let currentPoint: point = { x: 0, y: 0 };\n  let previousControlPoint: point | null = null;\n\n  for (const command of commands) {\n    switch (command.type) {\n      case 'M':\n        currentPoint = { x: command.x, y: command.y };\n        points.push(currentPoint);\n        previousControlPoint = null;\n        break;\n      case 'L':\n        const lineEnd = { x: command.x, y: command.y };\n        points.push(...interpolateLinear(currentPoint, lineEnd, precision));\n        currentPoint = lineEnd;\n        previousControlPoint = null;\n        break;\n      case 'H':\n        const horizontalEnd = { x: command.x, y: currentPoint.y };\n        points.push(...interpolateLinear(currentPoint, horizontalEnd, precision));\n        currentPoint = horizontalEnd;\n        previousControlPoint = null;\n        break;\n      case 'V':\n        const verticalEnd = { x: currentPoint.x, y: command.y };\n        points.push(...interpolateLinear(currentPoint, verticalEnd, precision));\n        currentPoint = verticalEnd;\n        previousControlPoint = null;\n        break;\n      case 'C':\n        const cubicStart = currentPoint;\n        const cubicControl1 = { x: command.x1, y: command.y1 };\n        const cubicControl2 = { x: command.x2, y: command.y2 };\n        const cubicEnd = { x: command.x, y: command.y };\n        points.push(...interpolateCubicBezier(cubicStart, cubicControl1, cubicControl2, cubicEnd, precision));\n        currentPoint = cubicEnd;\n        previousControlPoint = cubicControl2;\n        break;\n      case 'S':\n        const smoothStart = currentPoint;\n        const smoothControl1 = previousControlPoint ? { x: 2 * smoothStart.x - previousControlPoint.x, y: 2 * smoothStart.y - previousControlPoint.y } : smoothStart;\n        const smoothControl2 = { x: command.x2, y: command.y2 };\n        const smoothEnd = { x: command.x, y: command.y };\n        points.push(...interpolateCubicBezier(smoothStart, smoothControl1, smoothControl2, smoothEnd, precision));\n        currentPoint = smoothEnd;\n        previousControlPoint = smoothControl2;\n        break;\n      case 'Q':\n        const quadStart = currentPoint;\n        const quadControl = { x: command.x, y: command.y };\n        const quadEnd = { x: command.x1, y: command.y1 };\n        points.push(...interpolateQuadraticBezier(quadStart, quadControl, quadEnd, precision));\n        currentPoint = quadEnd;\n        previousControlPoint = quadControl;\n        break;\n      case 'T':\n        const smoothQuadStart = currentPoint;\n        const smoothQuadControl = previousControlPoint ? { x: 2 * smoothQuadStart.x - previousControlPoint.x, y: 2 * smoothQuadStart.y - previousControlPoint.y } : smoothQuadStart;\n        const smoothQuadEnd = { x: command.x, y: command.y };\n        points.push(...interpolateQuadraticBezier(smoothQuadStart, smoothQuadControl, smoothQuadEnd, precision));\n        currentPoint = smoothQuadEnd;\n        previousControlPoint = smoothQuadControl;\n        break;\n      case 'A':\n        const arcStart = currentPoint;\n        const arcEnd = { x: command.x, y: command.y };\n        points.push(...interpolateArc(arcStart, command.rx, command.ry, command.xAxisRotation, command.largeArcFlag, command.sweepFlag, arcEnd, precision));\n        currentPoint = arcEnd;\n        previousControlPoint = null;\n        break;\n      case 'Z':\n        if (points.length > 0) {\n          points.push(points[0]); // Close path by connecting to the start\n        }\n        previousControlPoint = null;\n        break;\n      default:\n        throw new Error(`Unsupported command type: ${command.type}`);\n    }\n  }\n\n  return points;\n}\n\nexport function smoothPath(path: path): path {\n  function simplifyPoints(points: points, tolerance: number): points {\n    function distanceToSegment(point: point, start: point, end: point): number {\n      let dx = end.x - start.x;\n      let dy = end.y - start.y;\n      let d = dx * dx + dy * dy;\n      let t = ((point.x - start.x) * dx + (point.y - start.y) * dy) / d;\n\n      if (t < 0) {\n        dx = point.x - start.x;\n        dy = point.y - start.y;\n      } else if (t > 1) {\n        dx = point.x - end.x;\n        dy = point.y - end.y;\n      } else {\n        var closestPoint = { x: start.x + t * dx, y: start.y + t * dy };\n        dx = point.x - closestPoint.x;\n        dy = point.y - closestPoint.y;\n      }\n\n      return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    if (points.length < 3) {\n      return points;\n    }\n\n    let dmax = 0;\n    let index = 0;\n\n    // Find the point with the maximum distance\n    for (let i = 1; i < points.length - 1; i++) {\n      let d = distanceToSegment(points[i], points[0], points[points.length - 1]);\n      if (d > dmax) {\n        index = i;\n        dmax = d;\n      }\n    }\n\n    // If max distance is greater than tolerance, split the curve\n    if (dmax > tolerance) {\n      let leftPoints = points.slice(0, index + 1);\n      let rightPoints = points.slice(index);\n      let simplifiedLeft = simplifyPoints(leftPoints, tolerance);\n      let simplifiedRight = simplifyPoints(rightPoints, tolerance);\n      return simplifiedLeft.slice(0, simplifiedLeft.length - 1).concat(simplifiedRight);\n    } else {\n      return [points[0], points[points.length - 1]];\n    }\n  }\n\n  const points = samplePath(path, 1);\n  const simplifiedPoints = simplifyPoints(points, 1);\n  const simplifiedPointsLength = simplifiedPoints.length;\n  let simplifiedCommands = [];\n\n  for (let i = 0; i < simplifiedPointsLength; i++) {\n    const currentSimplifiedPoint = simplifiedPoints[i];\n    const nextSimplifiedPoint = simplifiedPoints[i + 1] || currentSimplifiedPoint;\n    if (i === 0) {\n      simplifiedCommands.push({ type: 'M', x: currentSimplifiedPoint.x, y: currentSimplifiedPoint.y });\n    } else {\n      if (i === simplifiedPointsLength - 1) {\n        simplifiedCommands.push({ type: 'L', x: currentSimplifiedPoint.x, y: currentSimplifiedPoint.y });\n      } else {\n        simplifiedCommands.push({ type: 'Q', x1: currentSimplifiedPoint.x, y1: currentSimplifiedPoint.y, x: (currentSimplifiedPoint.x + nextSimplifiedPoint.x) / 2, y: (currentSimplifiedPoint.y + nextSimplifiedPoint.y) / 2 });\n      }\n    }\n  }\n  path.d = simplifiedCommands;\n  return path;\n}\n","import { points, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index';\nimport { uuidv4 } from '../../tools/index';\n\nexport interface polygon {\n  points: points;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the polygon\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildPolygon(points: points, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): polygon {\n  return {\n    points: points || [],\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'polygon'\n  };\n}\n","import { points, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index';\nimport { uuidv4 } from '../../tools/index';\n\nexport interface polyline {\n  points: points;\n\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the polyline\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildPolyline(points: points, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): polyline {\n  return {\n    points: points || [],\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'polyline'\n  };\n}\n","import { x, y, width, height, rx, ry, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index';\nimport { uuidv4 } from '../../tools/index';\n\nexport interface rect {\n  x: x;\n  y: y;\n  width: width;\n  height: height;\n  rx?: rx;\n  ry?: ry;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the rectangle\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildRect(x: x, y: y, width: width, height: height, rx: rx, ry: ry, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): rect {\n  return {\n    x: x || 0,\n    y: y || 0,\n    width: width || 0,\n    height: height || 0,\n    rx: rx || 0,\n    ry: ry || 0,\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'rect'\n  };\n}\n","import { uuidv4 } from '../../tools/index';\nimport { x, y, width, height, id } from '../attributes/index';\nimport { elements } from '../elements/index';\n\ntype root = boolean;\n\nexport interface plane {\n  x: x;\n  y: y;\n  width: width;\n  height: height;\n  root: root;\n  elements: elements;\n  subPlanes: Array<plane>;\n  id: id;\n  type: 'plane';\n}\n\nexport function buildPlane(x: x, y: y, width: width, height: height, root: root, elements: elements, subPlanes: Array<plane>): plane {\n  return {\n    x: root ? 0 : x || 0,\n    y: root ? 0 : y || 0,\n    width: width || 0,\n    height: height || 0,\n    root: root || false,\n    elements: elements || [],\n    subPlanes: subPlanes || [],\n    id: uuidv4(),\n    type: 'plane'\n  };\n}\n","import { plane } from '../plane/index';\n\nimport { rect } from '../elements/rect';\nimport { circle } from '../elements/circle';\nimport { ellipse } from '../elements/ellipse';\nimport { line } from '../elements/line';\nimport { polyline } from '../elements/polyline';\nimport { polygon } from '../elements/polygon';\n\nimport { createTransformationMatrix } from '../transformation/index';\nimport { points, transform } from '../attributes/index';\n\ninterface renderConfig {\n  flattenTransform: boolean;\n  exceptID: boolean;\n}\n\nexport function renderPlaneAsXML(plane: plane, config: renderConfig): string {\n  function renderElements(plane: plane, config: renderConfig): string {\n    var result = '';\n    function renderTransform(transform: transform, config: renderConfig): string {\n      if (config.flattenTransform) {\n        var transformationMatrix = createTransformationMatrix(transform);\n        var result = `matrix(${transformationMatrix[0][0]},${transformationMatrix[1][0]},${transformationMatrix[0][1]},${transformationMatrix[1][1]},${transformationMatrix[0][2]},${transformationMatrix[1][2]})`;\n        return result;\n      } else {\n        var result = [];\n        var transformLength: number = transform.length;\n        for (var i = 0; i < transformLength; i++) {\n          switch (transform[i]?.type) {\n            case 'translate':\n              result.push(`translate(${transform[i].x},${transform[i].y})`);\n              break;\n            case 'scale':\n              result.push(`scale(${transform[i].x},${transform[i].y})`);\n              break;\n            case 'rotate':\n              result.push(`rotate(${transform[i].deg})`);\n              break;\n            case 'skewX':\n              result.push(`skewX(${transform[i].deg})`);\n              break;\n            case 'skewY':\n              result.push(`skewY(${transform[i].deg})`);\n              break;\n            default:\n              break;\n          }\n        }\n        return result.join(' ');\n      }\n    }\n\n    function renderPoints(points: points, plane: plane): string {\n      return points.map((point) => `${point.x + plane.x},${point.y + plane.y}`).join(' ');\n    }\n\n    function renderD(d: d, plane: plane): string {\n      var result = [];\n      for (var command of d) {\n        switch (command?.type) {\n          case 'M':\n            result.push(`M ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'L':\n            result.push(`L ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'H':\n            result.push(`H ${command.x + plane.x}`);\n            break;\n          case 'V':\n            result.push(`V ${command.y + plane.y}`);\n            break;\n          case 'C':\n            result.push(`C ${command.x1 + plane.x} ${command.y1 + plane.y},${command.x2 + plane.x} ${command.y2 + plane.y},${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'S':\n            result.push(`S ${command.x2 + plane.x} ${command.y2 + plane.y},${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'Q':\n            result.push(`Q ${command.x1 + plane.x} ${command.y1 + plane.y} ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'T':\n            result.push(`T ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'A':\n            result.push(`A ${command.rx} ${command.ry} ${command.xAxisRotation} ${command.largeArcFlag} ${command.sweepFlag} ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'Z':\n            result.push('Z');\n            break;\n          default:\n            break;\n        }\n      }\n      return result.join(' ');\n    }\n\n    function renderRect(rect: rect, plane: plane): string {\n      var rectWidth: number = Math.abs(rect.width);\n      var rectHeight: number = Math.abs(rect.height);\n      var rectX: number = rect.x;\n      var rectY: number = rect.y;\n      if (rect.width < 0) {\n        rectX -= rectWidth;\n      }\n      if (rect.height < 0) {\n        rectY -= rectHeight;\n      }\n      return `<rect x=\"${rectX + plane.x}\" y=\"${rectY + plane.y}\" width=\"${rectWidth}\" height=\"${rectHeight}\" rx=\"${rect.rx}\" ry=\"${rect.ry}\" fill=\"${rect.fill}\" stroke=\"${rect.stroke}\" stroke-width=\"${rect.strokeWidth}\" stroke-dasharray=\"${rect.strokeDasharray}\" stroke-linecap=\"${rect.strokeLinecap}\" stroke-linejoin=\"${rect.strokeLinejoin}\" transform=\"${renderTransform(rect.transform, config)}\" opacity=\"${rect.opacity}\" visibility=\"${rect.visibility}\" ${config.exceptID ? '' : ` id=\"${rect.id}\" `}/>`;\n    }\n\n    function renderCircle(circle: circle, plane: plane): string {\n      return `<circle cx=\"${circle.cx + plane.x}\" cy=\"${circle.cy + plane.y}\" r=\"${circle.r}\" fill=\"${circle.fill}\" stroke=\"${circle.stroke}\" stroke-width=\"${circle.strokeWidth}\" stroke-dasharray=\"${circle.strokeDasharray}\" stroke-linecap=\"${circle.strokeLinecap}\" stroke-linejoin=\"${circle.strokeLinejoin}\" transform=\"${renderTransform(circle.transform, config)}\" opacity=\"${circle.opacity}\" visibility=\"${circle.visibility}\" ${config.exceptID ? '' : ` id=\"${circle.id}\" `}/>`;\n    }\n\n    function renderEllipse(ellipse: ellipse, plane: plane): string {\n      return `<ellipse cx=\"${ellipse.cx + plane.x}\" cy=\"${ellipse.cy + plane.y}\" rx=\"${ellipse.rx}\" ry=\"${ellipse.ry}\" fill=\"${ellipse.fill}\" stroke=\"${ellipse.stroke}\" stroke-width=\"${ellipse.strokeWidth}\" stroke-dasharray=\"${ellipse.strokeDasharray}\" stroke-linecap=\"${ellipse.strokeLinecap}\" stroke-linejoin=\"${ellipse.strokeLinejoin}\" transform=\"${renderTransform(ellipse.transform, config)}\" opacity=\"${ellipse.opacity}\" visibility=\"${ellipse.visibility}\" ${config.exceptID ? '' : ` id=\"${ellipse.id}\" `}/>`;\n    }\n\n    function renderLine(line: line, plane: plane): string {\n      return `<line x1=\"${line.x1 + plane.x}\" y1=\"${line.y1 + plane.y}\" x2=\"${line.x2 + plane.x}\" y2=\"${line.y2 + plane.y}\" stroke=\"${line.stroke}\" stroke-width=\"${line.strokeWidth}\" stroke-dasharray=\"${line.strokeDasharray}\" stroke-linecap=\"${line.strokeLinecap}\" stroke-linejoin=\"${line.strokeLinejoin}\" transform=\"${renderTransform(line.transform, config)}\" opacity=\"${line.opacity}\" visibility=\"${line.visibility}\" ${config.exceptID ? '' : ` id=\"${line.id}\" `}/>`;\n    }\n\n    function renderPolyline(polyline: polyline, plane: plane): string {\n      return `<polyline points=\"${renderPoints(polyline.points, plane)}\" stroke=\"${polyline.stroke}\" stroke-width=\"${polyline.strokeWidth}\" stroke-dasharray=\"${polyline.strokeDasharray}\" stroke-linecap=\"${polyline.strokeLinecap}\" stroke-linejoin=\"${polyline.strokeLinejoin}\" transform=\"${renderTransform(polyline.transform, config)}\" opacity=\"${polyline.opacity}\" visibility=\"${polyline.visibility}\" ${config.exceptID ? '' : ` id=\"${polyline.id}\" `}/>`;\n    }\n\n    function renderPolygon(polygon: polygon, plane: plane): string {\n      return `<polygon points=\"${renderPoints(polygon.points, plane)}\" fill=\"${polygon.fill}\" stroke=\"${polygon.stroke}\" stroke-width=\"${polygon.strokeWidth}\" stroke-dasharray=\"${polygon.strokeDasharray}\" stroke-linecap=\"${polygon.strokeLinecap}\" stroke-linejoin=\"${polygon.strokeLinejoin}\" transform=\"${renderTransform(polygon.transform, config)}\" opacity=\"${polygon.opacity}\" visibility=\"${polygon.visibility}\" ${config.exceptID ? '' : ` id=\"${polygon.id}\" `}/>`;\n    }\n\n    function renderPath(path: path, plane: plane): string {\n      return `<path d=\"${renderD(path.d, plane)}\" fill=\"${path.fill}\" stroke=\"${path.stroke}\" stroke-width=\"${path.strokeWidth}\" stroke-dasharray=\"${path.strokeDasharray}\" stroke-linecap=\"${path.strokeLinecap}\" stroke-linejoin=\"${path.strokeLinejoin}\" transform=\"${renderTransform(path.transform, config)}\" opacity=\"${path.opacity}\" visibility=\"${path.visibility}\" ${config.exceptID ? '' : ` id=\"${path.id}\" `}/>`;\n    }\n\n    for (var element of plane.elements) {\n      switch (element?.type) {\n        case 'rect':\n          result += renderRect(element, plane);\n          break;\n        case 'circle':\n          result += renderCircle(element, plane);\n          break;\n        case 'ellipse':\n          result += renderEllipse(element, plane);\n          break;\n        case 'line':\n          result += renderLine(element, plane);\n          break;\n        case 'polyline':\n          result += renderPolyline(element, plane);\n          break;\n        case 'polygon':\n          result += renderPolygon(element, plane);\n          break;\n        case 'path':\n          result += renderPath(element, plane);\n          break;\n        default:\n          break;\n      }\n    }\n\n    for (var subPlane of plane.subPlanes) {\n      result += renderElements(subPlane, config);\n    }\n\n    return `<g${config.exceptID ? '' : ` id=\"${plane.id}\"`}>${result}</g>`;\n  }\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${plane.width}\" height=\"${plane.height}\" viewBox=\"0 0 ${plane.width} ${plane.height}\">${renderElements(plane, config)}</svg>`;\n}\n","import { translate, scale, rotate, skewX, skewY, matrix, rad, transform, point, points } from '../attributes/index';\n\nexport function createTranslationMatrix(translate: translate): matrix {\n  return [\n    [1, 0, translate.x],\n    [0, 1, translate.y],\n    [0, 0, 1]\n  ];\n}\n\nexport function createScalingMatrix(scale: scale): matrix {\n  return [\n    [scale.x, 0, 0],\n    [0, scale.y, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createRotationMatrix(rotate: rotate): matrix {\n  const rad: rad = (rotate.deg * Math.PI) / 180;\n  return [\n    [Math.cos(rad), -Math.sin(rad), 0],\n    [Math.sin(rad), Math.cos(rad), 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createSkewXMatrix(skewX: skewX): matrix {\n  const rad: rad = (skewX.deg * Math.PI) / 180;\n  return [\n    [1, Math.tan(rad), 0],\n    [0, 1, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createSkewYMatrix(skewY: skewY): matrix {\n  const rad: rad = (skewY.deg * Math.PI) / 180;\n  return [\n    [1, 0, 0],\n    [Math.tan(rad), 1, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function multiplyMatrices(a: matrix, b: matrix): matrix {\n  var result: matrix = [\n    [0, 0, 0],\n    [0, 0, 0],\n    [0, 0, 0]\n  ];\n\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < 3; j++) {\n      for (var k = 0; k < 3; k++) {\n        result[i][j] += a[i][k] * b[k][j];\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function createTransformationMatrix(transform: transform): matrix {\n  var identityMatrix: matrix = [\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1]\n  ];\n  var transformLength = transform.length;\n\n  for (var i = 0; i < transformLength; i++) {\n    var transformationMatrix: matrix;\n    switch (transform[i]?.type) {\n      case 'translate':\n        transformationMatrix = createTranslationMatrix(transform[i]);\n        break;\n      case 'scale':\n        transformationMatrix = createScalingMatrix(transform[i]);\n        break;\n      case 'rotate':\n        transformationMatrix = createRotationMatrix(transform[i]);\n        break;\n      case 'skewX':\n        transformationMatrix = createSkewXMatrix(transform[i]);\n        break;\n      case 'skewY':\n        transformationMatrix = createSkewYMatrix(transform[i]);\n        break;\n      default:\n        transformationMatrix = [\n          [1, 0, 0],\n          [0, 1, 0],\n          [0, 0, 1]\n        ];\n        break;\n    }\n    identityMatrix = multiplyMatrices(transformationMatrix, identityMatrix);\n  }\n  return identityMatrix; // return a new \"identity\" matrix\n}\n\nexport function transformPoints(points: points, transform: transform): points {\n  function applyTransformationMatrix(matrix: matrix, point: point): point {\n    const [x, y, _] = [matrix[0][0] * point.x + matrix[0][1] * point.y + matrix[0][2], matrix[1][0] * point.x + matrix[1][1] * point.y + matrix[1][2], 1];\n    return { x, y };\n  }\n  const transformationMatrix = createTransformationMatrix(transform);\n  return points.map((point) => applyTransformationMatrix(transformationMatrix, point));\n}\n","import { createVectorDocument, openDocument, vectorDocument } from '../editor/index';\n\nconst newDocumentElement: HTMLElement = document.querySelector('.css_new_document');\nconst newDocumentModalOverlayElement: HTMLElement = document.querySelector('.css_new_document_modal_overlay');\n\nexport function openNewDocument(): void {\n  newDocumentElement.setAttribute('displayed', true);\n  newDocumentModalOverlayElement.setAttribute('displayed', true);\n}\n\nexport function closeNewDocument(): void {\n  newDocumentElement.setAttribute('displayed', false);\n  newDocumentModalOverlayElement.setAttribute('displayed', false);\n}\n\nexport function createDocumentWithInputs(): void {\n  const name: string = String(newDocumentElement.querySelector('#new_document_name').value) || 'Untitled';\n  const width: number = parseInt(newDocumentElement.querySelector('#new_document_width').value) || 64;\n  const height: number = parseInt(newDocumentElement.querySelector('#new_document_height').value) || 64;\n  var creation: vectorDocument = createVectorDocument(width, height, null, null, name);\n  openDocument(creation.id);\n}\n","import { createTransformationMatrix, transformPoints } from './graphic/transformation/index';\nimport { buildRect } from './graphic/elements/rect';\nimport { buildCircle } from './graphic/elements/circle';\nimport { buildPlane } from './graphic/plane/index';\nimport { renderPlaneAsXML } from './graphic/render/index';\nimport { initializeTools, switchTool } from './editor/tools/index';\nimport { initializeEditor } from './editor/index';\nimport { openNewDocument, closeNewDocument, createDocumentWithInputs } from './new_document/index';\nimport { switchShapeType } from './editor/tools/shape';\n\nimport './theme.css';\nimport './index.css';\nimport './home/index.css';\nimport './new_document/index.css';\nimport './editor/index.css';\nimport './editor/planes.css';\nimport './editor/tools/index.css';\nimport './editor/tools/shape.css';\n\nwindow.vector = {\n  test: {\n    createTransformationMatrix,\n    transformPoints,\n    r: function () {\n      var plane0 = buildPlane(0, 0, 300, 300, true);\n      var rect0 = buildRect(\n        10,\n        20,\n        50,\n        80,\n        10,\n        10,\n        '#000',\n        null,\n        null,\n        null,\n        null,\n        null,\n        [\n          { type: 'rotate', deg: 20 },\n          { type: 'translate', x: 90, y: 40 }\n        ],\n        1,\n        null\n      );\n      plane0.elements.push(rect0);\n      var plane1 = buildPlane(5, 5, 60, 60, false, null, null);\n      var rect1 = buildRect(5, 5, 50, 50, 5, 5, '#000');\n      var circle0 = buildCircle(0, 0, 20, 20, 20, '#000', null, null, null, null, null, [{ type: 'scale', x: 1.5, y: 1.2 }], 0.8, null);\n      plane1.elements.push(rect1);\n      plane1.elements.push(circle0);\n      plane0.subPlanes.push(plane1);\n      console.log(JSON.stringify(plane0));\n      console.log(\n        renderPlaneAsXML(plane0, {\n          flattenTransform: false,\n          exceptID: false\n        })\n      );\n    }\n  },\n  toolbar: {\n    switchTool,\n    switchShapeType\n  },\n  documents: {\n    newDocument: {\n      openNewDocument,\n      closeNewDocument,\n      createDocumentWithInputs\n    }\n  },\n  initialize: function () {\n    initializeTools();\n    initializeEditor();\n    console.log(0);\n  }\n};\n\nexport default window.vector;\n","export const { v4: uuidv4 } = require('uuid');\n\n"],"names":["buildCircle","x","y","cx","cy","r","fill","stroke","strokeWidth","strokeDasharray","strokeLinecap","strokeLinejoin","transform","opacity","visibility","id","uuidv4","type","buildEllipse","rx","ry","buildLine","x1","y1","x2","y2","buildPath","d","samplePath","path","precision","points","interpolateLinear","p0","p1","segmentPoints","step","Math","hypot","i","t","min","max","push","interpolateCubicBezier","c1","c2","pow","interpolateQuadraticBezier","c","interpolateArc","xAxisRotation","largeArcFlag","sweepFlag","theta","PI","cos","sin","_step","currentPoint","previousControlPoint","_iterator","_createForOfIteratorHelper","s","n","done","command","value","lineEnd","apply","_toConsumableArray","horizontalEnd","verticalEnd","cubicStart","cubicControl1","cubicControl2","cubicEnd","smoothStart","smoothControl1","smoothControl2","smoothEnd","quadStart","quadControl","quadEnd","smoothQuadStart","smoothQuadControl","smoothQuadEnd","arcStart","arcEnd","length","Error","concat","err","e","f","smoothPath","simplifiedPoints","simplifyPoints","tolerance","distanceToSegment","point","start","end","dx","dy","closestPoint","sqrt","dmax","index","leftPoints","slice","rightPoints","simplifiedLeft","simplifiedRight","simplifiedPointsLength","simplifiedCommands","currentSimplifiedPoint","nextSimplifiedPoint","buildPolygon","buildPolyline","buildRect","width","height","buildPlane","root","elements","subPlanes","renderPlaneAsXML","plane","config","renderElements","result","renderTransform","flattenTransform","transformationMatrix","createTransformationMatrix","transformLength","_transform$i","deg","join","renderPoints","map","renderRect","rect","rectWidth","abs","rectHeight","rectX","rectY","exceptID","renderCircle","circle","renderEllipse","ellipse","renderLine","line","renderPolyline","polyline","renderPolygon","polygon","renderPath","_command","renderD","_step2","_iterator2","_element","element","_step3","_iterator3","createSkewXMatrix","skewX","rad","tan","createSkewYMatrix","skewY","multiplyMatrices","a","b","j","k","rotate","scale","translate","identityMatrix","transformPoints","matrix","applyTransformationMatrix","newDocumentElement","document","querySelector","newDocumentModalOverlayElement","window","vector","test","plane0","rect0","plane1","rect1","circle0","console","log","JSON","stringify","toolbar","switchTool","switchShapeType","documents","newDocument","openNewDocument","setAttribute","closeNewDocument","createDocumentWithInputs","name","String","parseInt","creation","createVectorDocument","openDocument","initialize","initializeTools","initializeEditor","require","v4"],"sourceRoot":""}