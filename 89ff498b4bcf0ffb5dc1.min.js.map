{"version":3,"file":"89ff498b4bcf0ffb5dc1.min.js","mappings":"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","sources":["webpack://vector/./src/graphic/elements/polygon.ts","webpack://vector/./src/graphic/elements/polyline.ts","webpack://vector/./src/graphic/elements/rect.ts","webpack://vector/./src/graphic/plane/index.ts","webpack://vector/./src/graphic/render/index.ts","webpack://vector/./src/graphic/transformation/index.ts","webpack://vector/./src/new_document/index.ts","webpack://vector/./src/utilities/lazy-css.ts","webpack://vector/./src/index.ts","webpack://vector/./src/utilities/index.ts"],"sourcesContent":["import { points, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index';\nimport { uuidv4 } from '../../utilities/index';\n\nexport interface polygon {\n  points: points;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the polygon\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildPolygon(points: points, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): polygon {\n  return {\n    points: points || [],\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'polygon'\n  };\n}\n","import { points, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType } from '../attributes/index';\nimport { uuidv4 } from '../../utilities/index';\n\nexport interface polyline {\n  points: points;\n\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the polyline\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildPolyline(points: points, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): polyline {\n  return {\n    points: points || [],\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'polyline'\n  };\n}\n","import { x, y, width, height, rx, ry, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, id, elementType, boundingBox } from '../attributes/index';\nimport { uuidv4 } from '../../utilities/index';\n\nexport interface rect {\n  x: x;\n  y: y;\n  width: width;\n  height: height;\n  rx?: rx;\n  ry?: ry;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the rectangle\n  opacity?: opacity;\n  visibility?: visibility;\n  id: id;\n  type: elementType;\n}\n\nexport function buildRect(x: x, y: y, width: width, height: height, rx: rx, ry: ry, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): rect {\n  return {\n    x: x || 0,\n    y: y || 0,\n    width: width || 0,\n    height: height || 0,\n    rx: rx || 0,\n    ry: ry || 0,\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    id: uuidv4(),\n    type: 'rect'\n  };\n}\n\nexport function getRectBoundingBox(element: rect): boundingBox {\n  const a = element.x;\n  const b = element.y;\n  const c = element.x + element.width;\n  const d = element.y + element.height;\n\n  const x0 = Math.min(a, c);\n  const y0 = Math.min(b, d);\n  const x1 = Math.max(a, c);\n  const y1 = Math.max(b, d);\n  return { x0, y0, x1, y1 };\n}\n","import { uuidv4 } from '../../utilities/index';\nimport { x, y, width, height, id } from '../attributes/index';\nimport { elements } from '../elements/index';\n\ntype root = boolean;\n\nexport interface plane {\n  x: x;\n  y: y;\n  width: width;\n  height: height;\n  root: root;\n  elements: elements;\n  subPlanes: Array<plane>;\n  id: id;\n  type: 'plane';\n}\n\nexport function buildPlane(x: x, y: y, width: width, height: height, root: root, elements: elements, subPlanes: Array<plane>): plane {\n  return {\n    x: root ? 0 : x || 0,\n    y: root ? 0 : y || 0,\n    width: width || 0,\n    height: height || 0,\n    root: root || false,\n    elements: elements || [],\n    subPlanes: subPlanes || [],\n    id: uuidv4(),\n    type: 'plane'\n  };\n}\n\nexport function searchElementOnPlane(plane: plane, id: id): elements {\n  let result = [];\n  for (const element of plane.elements) {\n    if (element.id === id) {\n      result.push(element);\n      break;\n    }\n  }\n  if (plane.subPlanes.length > 0) {\n    for (const subPlane of plane.subPlanes) {\n      result.push(searchElementOnPlane(subPlane, id));\n    }\n  }\n  return result;\n}\n","import { plane } from '../plane/index';\n\nimport { rect } from '../elements/rect';\nimport { circle } from '../elements/circle';\nimport { ellipse } from '../elements/ellipse';\nimport { line } from '../elements/line';\nimport { polyline } from '../elements/polyline';\nimport { polygon } from '../elements/polygon';\n\nimport { createTransformationMatrix } from '../transformation/index';\nimport { points, transform } from '../attributes/index';\n\ninterface renderConfig {\n  flattenTransform: boolean;\n  exceptID: boolean;\n}\n\nexport function renderPlaneAsXML(plane: plane, config: renderConfig): string {\n  function renderElements(plane: plane, config: renderConfig): string {\n    var result = '';\n    function renderTransform(transform: transform, config: renderConfig): string {\n      if (config.flattenTransform) {\n        var transformationMatrix = createTransformationMatrix(transform);\n        var result = `matrix(${transformationMatrix[0][0]},${transformationMatrix[1][0]},${transformationMatrix[0][1]},${transformationMatrix[1][1]},${transformationMatrix[0][2]},${transformationMatrix[1][2]})`;\n        return result;\n      } else {\n        var result = [];\n        var transformLength: number = transform.length;\n        for (var i = 0; i < transformLength; i++) {\n          switch (transform[i]?.type) {\n            case 'translate':\n              result.push(`translate(${transform[i].x},${transform[i].y})`);\n              break;\n            case 'scale':\n              result.push(`scale(${transform[i].x},${transform[i].y})`);\n              break;\n            case 'rotate':\n              result.push(`rotate(${transform[i].deg})`);\n              break;\n            case 'skewX':\n              result.push(`skewX(${transform[i].deg})`);\n              break;\n            case 'skewY':\n              result.push(`skewY(${transform[i].deg})`);\n              break;\n            default:\n              break;\n          }\n        }\n        return result.join(' ');\n      }\n    }\n\n    function renderPoints(points: points, plane: plane): string {\n      return points.map((point) => `${point.x + plane.x},${point.y + plane.y}`).join(' ');\n    }\n\n    function renderD(d: d, plane: plane): string {\n      let result = [];\n      for (const command of d) {\n        switch (command?.type) {\n          case 'M':\n            result.push(`M ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'L':\n            result.push(`L ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'H':\n            result.push(`H ${command.x + plane.x}`);\n            break;\n          case 'V':\n            result.push(`V ${command.y + plane.y}`);\n            break;\n          case 'C':\n            result.push(`C ${command.x1 + plane.x} ${command.y1 + plane.y},${command.x2 + plane.x} ${command.y2 + plane.y},${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'S':\n            result.push(`S ${command.x2 + plane.x} ${command.y2 + plane.y},${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'Q':\n            result.push(`Q ${command.x1 + plane.x} ${command.y1 + plane.y} ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'T':\n            result.push(`T ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'A':\n            result.push(`A ${command.rx} ${command.ry} ${command.xAxisRotation} ${command.largeArcFlag} ${command.sweepFlag} ${command.x + plane.x} ${command.y + plane.y}`);\n            break;\n          case 'Z':\n            result.push('Z');\n            break;\n          default:\n            break;\n        }\n      }\n      return result.join(' ');\n    }\n\n    function renderRect(rect: rect, plane: plane): string {\n      var rectWidth: number = Math.abs(rect.width);\n      var rectHeight: number = Math.abs(rect.height);\n      var rectX: number = rect.x;\n      var rectY: number = rect.y;\n      if (rect.width < 0) {\n        rectX -= rectWidth;\n      }\n      if (rect.height < 0) {\n        rectY -= rectHeight;\n      }\n      return `<rect x=\"${rectX + plane.x}\" y=\"${rectY + plane.y}\" width=\"${rectWidth}\" height=\"${rectHeight}\" rx=\"${rect.rx}\" ry=\"${rect.ry}\" fill=\"${rect.fill}\" stroke=\"${rect.stroke}\" stroke-width=\"${rect.strokeWidth}\" stroke-dasharray=\"${rect.strokeDasharray}\" stroke-linecap=\"${rect.strokeLinecap}\" stroke-linejoin=\"${rect.strokeLinejoin}\" transform=\"${renderTransform(rect.transform, config)}\" opacity=\"${rect.opacity}\" visibility=\"${rect.visibility}\" ${config.exceptID ? '' : ` id=\"${rect.id}\" `}/>`;\n    }\n\n    function renderCircle(circle: circle, plane: plane): string {\n      return `<circle cx=\"${circle.cx + plane.x}\" cy=\"${circle.cy + plane.y}\" r=\"${circle.r}\" fill=\"${circle.fill}\" stroke=\"${circle.stroke}\" stroke-width=\"${circle.strokeWidth}\" stroke-dasharray=\"${circle.strokeDasharray}\" stroke-linecap=\"${circle.strokeLinecap}\" stroke-linejoin=\"${circle.strokeLinejoin}\" transform=\"${renderTransform(circle.transform, config)}\" opacity=\"${circle.opacity}\" visibility=\"${circle.visibility}\" ${config.exceptID ? '' : ` id=\"${circle.id}\" `}/>`;\n    }\n\n    function renderEllipse(ellipse: ellipse, plane: plane): string {\n      return `<ellipse cx=\"${ellipse.cx + plane.x}\" cy=\"${ellipse.cy + plane.y}\" rx=\"${ellipse.rx}\" ry=\"${ellipse.ry}\" fill=\"${ellipse.fill}\" stroke=\"${ellipse.stroke}\" stroke-width=\"${ellipse.strokeWidth}\" stroke-dasharray=\"${ellipse.strokeDasharray}\" stroke-linecap=\"${ellipse.strokeLinecap}\" stroke-linejoin=\"${ellipse.strokeLinejoin}\" transform=\"${renderTransform(ellipse.transform, config)}\" opacity=\"${ellipse.opacity}\" visibility=\"${ellipse.visibility}\" ${config.exceptID ? '' : ` id=\"${ellipse.id}\" `}/>`;\n    }\n\n    function renderLine(line: line, plane: plane): string {\n      return `<line x1=\"${line.x1 + plane.x}\" y1=\"${line.y1 + plane.y}\" x2=\"${line.x2 + plane.x}\" y2=\"${line.y2 + plane.y}\" stroke=\"${line.stroke}\" stroke-width=\"${line.strokeWidth}\" stroke-dasharray=\"${line.strokeDasharray}\" stroke-linecap=\"${line.strokeLinecap}\" stroke-linejoin=\"${line.strokeLinejoin}\" transform=\"${renderTransform(line.transform, config)}\" opacity=\"${line.opacity}\" visibility=\"${line.visibility}\" ${config.exceptID ? '' : ` id=\"${line.id}\" `}/>`;\n    }\n\n    function renderPolyline(polyline: polyline, plane: plane): string {\n      return `<polyline points=\"${renderPoints(polyline.points, plane)}\" stroke=\"${polyline.stroke}\" stroke-width=\"${polyline.strokeWidth}\" stroke-dasharray=\"${polyline.strokeDasharray}\" stroke-linecap=\"${polyline.strokeLinecap}\" stroke-linejoin=\"${polyline.strokeLinejoin}\" transform=\"${renderTransform(polyline.transform, config)}\" opacity=\"${polyline.opacity}\" visibility=\"${polyline.visibility}\" ${config.exceptID ? '' : ` id=\"${polyline.id}\" `}/>`;\n    }\n\n    function renderPolygon(polygon: polygon, plane: plane): string {\n      return `<polygon points=\"${renderPoints(polygon.points, plane)}\" fill=\"${polygon.fill}\" stroke=\"${polygon.stroke}\" stroke-width=\"${polygon.strokeWidth}\" stroke-dasharray=\"${polygon.strokeDasharray}\" stroke-linecap=\"${polygon.strokeLinecap}\" stroke-linejoin=\"${polygon.strokeLinejoin}\" transform=\"${renderTransform(polygon.transform, config)}\" opacity=\"${polygon.opacity}\" visibility=\"${polygon.visibility}\" ${config.exceptID ? '' : ` id=\"${polygon.id}\" `}/>`;\n    }\n\n    function renderPath(path: path, plane: plane): string {\n      return `<path d=\"${renderD(path.d, plane)}\" fill=\"${path.fill}\" stroke=\"${path.stroke}\" stroke-width=\"${path.strokeWidth}\" stroke-dasharray=\"${path.strokeDasharray}\" stroke-linecap=\"${path.strokeLinecap}\" stroke-linejoin=\"${path.strokeLinejoin}\" transform=\"${renderTransform(path.transform, config)}\" opacity=\"${path.opacity}\" visibility=\"${path.visibility}\" ${config.exceptID ? '' : ` id=\"${path.id}\" `}/>`;\n    }\n\n    for (var element of plane.elements) {\n      switch (element?.type) {\n        case 'rect':\n          result += renderRect(element, plane);\n          break;\n        case 'circle':\n          result += renderCircle(element, plane);\n          break;\n        case 'ellipse':\n          result += renderEllipse(element, plane);\n          break;\n        case 'line':\n          result += renderLine(element, plane);\n          break;\n        case 'polyline':\n          result += renderPolyline(element, plane);\n          break;\n        case 'polygon':\n          result += renderPolygon(element, plane);\n          break;\n        case 'path':\n          result += renderPath(element, plane);\n          break;\n        default:\n          break;\n      }\n    }\n\n    for (var subPlane of plane.subPlanes) {\n      result += renderElements(subPlane, config);\n    }\n\n    return `<g${config.exceptID ? '' : ` id=\"${plane.id}\"`}>${result}</g>`;\n  }\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${plane.width}\" height=\"${plane.height}\" viewBox=\"0 0 ${plane.width} ${plane.height}\">${renderElements(plane, config)}</svg>`;\n}\n","import { translate, scale, rotate, skewX, skewY, matrix, rad, transform, point, points } from '../attributes/index';\n\nexport function createTranslationMatrix(translate: translate): matrix {\n  return [\n    [1, 0, translate.x],\n    [0, 1, translate.y],\n    [0, 0, 1]\n  ];\n}\n\nexport function createScalingMatrix(scale: scale): matrix {\n  return [\n    [scale.x, 0, 0],\n    [0, scale.y, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createRotationMatrix(rotate: rotate): matrix {\n  const rad: rad = (rotate.deg * Math.PI) / 180;\n  return [\n    [Math.cos(rad), -Math.sin(rad), 0],\n    [Math.sin(rad), Math.cos(rad), 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createSkewXMatrix(skewX: skewX): matrix {\n  const rad: rad = (skewX.deg * Math.PI) / 180;\n  return [\n    [1, Math.tan(rad), 0],\n    [0, 1, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createSkewYMatrix(skewY: skewY): matrix {\n  const rad: rad = (skewY.deg * Math.PI) / 180;\n  return [\n    [1, 0, 0],\n    [Math.tan(rad), 1, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function multiplyMatrices(a: matrix, b: matrix): matrix {\n  var result: matrix = [\n    [0, 0, 0],\n    [0, 0, 0],\n    [0, 0, 0]\n  ];\n\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < 3; j++) {\n      for (var k = 0; k < 3; k++) {\n        result[i][j] += a[i][k] * b[k][j];\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function createTransformationMatrix(transform: transform): matrix {\n  var identityMatrix: matrix = [\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1]\n  ];\n  var transformLength = transform.length;\n\n  for (var i = 0; i < transformLength; i++) {\n    var transformationMatrix: matrix;\n    switch (transform[i]?.type) {\n      case 'translate':\n        transformationMatrix = createTranslationMatrix(transform[i]);\n        break;\n      case 'scale':\n        transformationMatrix = createScalingMatrix(transform[i]);\n        break;\n      case 'rotate':\n        transformationMatrix = createRotationMatrix(transform[i]);\n        break;\n      case 'skewX':\n        transformationMatrix = createSkewXMatrix(transform[i]);\n        break;\n      case 'skewY':\n        transformationMatrix = createSkewYMatrix(transform[i]);\n        break;\n      default:\n        transformationMatrix = [\n          [1, 0, 0],\n          [0, 1, 0],\n          [0, 0, 1]\n        ];\n        break;\n    }\n    identityMatrix = multiplyMatrices(transformationMatrix, identityMatrix);\n  }\n  return identityMatrix; // return a new \"identity\" matrix\n}\n\nexport function transformPoints(points: points, transform: transform): points {\n  function applyTransformationMatrix(matrix: matrix, point: point): point {\n    const [x, y, _] = [matrix[0][0] * point.x + matrix[0][1] * point.y + matrix[0][2], matrix[1][0] * point.x + matrix[1][1] * point.y + matrix[1][2], 1];\n    return { x, y };\n  }\n  const transformationMatrix = createTransformationMatrix(transform);\n  return points.map((point) => applyTransformationMatrix(transformationMatrix, point));\n}\n","import { createVectorDocument, openDocument, vectorDocument } from '../editor/index';\n\nconst newDocumentElement: HTMLElement = document.querySelector('.css_new_document');\nconst newDocumentModalOverlayElement: HTMLElement = document.querySelector('.css_new_document_modal_overlay');\n\nexport function openNewDocument(): void {\n  newDocumentElement.setAttribute('displayed', true);\n  newDocumentModalOverlayElement.setAttribute('displayed', true);\n}\n\nexport function closeNewDocument(): void {\n  newDocumentElement.setAttribute('displayed', false);\n  newDocumentModalOverlayElement.setAttribute('displayed', false);\n}\n\nexport function createDocumentWithInputs(): void {\n  const name: string = String(newDocumentElement.querySelector('#new_document_name').value) || 'Untitled';\n  const width: number = parseInt(newDocumentElement.querySelector('#new_document_width').value) || 64;\n  const height: number = parseInt(newDocumentElement.querySelector('#new_document_height').value) || 64;\n  var creation: vectorDocument = createVectorDocument(width, height, null, null, name);\n  openDocument(creation.id);\n}\n","let lazyCSS = {\n  noto_sans_tc: false,\n  material_symbols: false\n};\n\nexport function loadCSS(url: string, identifier: string): void {\n  if (lazyCSS[identifier] === false) {\n    const link = document.createElement('link');\n    link.setAttribute('href', url);\n    link.setAttribute('rel', 'stylesheet');\n    document.head.appendChild(link);\n    lazyCSS[identifier] = true;\n  }\n}\n","import { createTransformationMatrix, transformPoints } from './graphic/transformation/index';\nimport { buildRect } from './graphic/elements/rect';\nimport { buildCircle } from './graphic/elements/circle';\nimport { buildPlane } from './graphic/plane/index';\nimport { renderPlaneAsXML } from './graphic/render/index';\nimport { initializeTools, switchTool } from './editor/tools/index';\nimport { initializeEditor } from './editor/index';\nimport { openNewDocument, closeNewDocument, createDocumentWithInputs } from './new_document/index';\nimport { switchShapeType } from './editor/tools/shape';\nimport { loadCSS } from './utilities/lazy-css';\nimport { buildPathFromElement, findPathIntersections, samplePath } from './graphic/elements/path';\n\nimport './theme.css';\nimport './index.css';\nimport './icons.css';\n\nimport './home/index.css';\n\nimport './new_document/index.css';\n\nimport './editor/index.css';\nimport './editor/planes.css';\nimport './editor/tools/index.css';\nimport './editor/tools/shape.css';\n\nwindow.vector = {\n  test: {\n    createTransformationMatrix,\n    transformPoints,\n    r: function () {\n      var plane0 = buildPlane(0, 0, 300, 300, true);\n      var rect0 = buildRect(\n        10,\n        20,\n        50,\n        80,\n        10,\n        10,\n        '#000',\n        null,\n        null,\n        null,\n        null,\n        null,\n        [\n          { type: 'rotate', deg: 20 },\n          { type: 'translate', x: 90, y: 40 }\n        ],\n        1,\n        null\n      );\n      plane0.elements.push(rect0);\n      var plane1 = buildPlane(5, 5, 60, 60, false, null, null);\n      var rect1 = buildRect(5, 5, 50, 50, 5, 5, '#000');\n      var circle0 = buildCircle(0, 0, 20, 20, 20, '#000', null, null, null, null, null, [{ type: 'scale', x: 1.5, y: 1.2 }], 0.8, null);\n      plane1.elements.push(rect1);\n      plane1.elements.push(circle0);\n      plane0.subPlanes.push(plane1);\n      console.log(JSON.stringify(plane0));\n      console.log(\n        renderPlaneAsXML(plane0, {\n          flattenTransform: false,\n          exceptID: false\n        })\n      );\n      for (const element of plane1.elements.concat(plane0.elements)) {\n        try {\n          let p = buildPathFromElement(element);\n          console.log(element);\n          console.log(p);\n          let P = samplePath(p, 1, true);\n          console.log(P);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n\n      console.log(findPathIntersections(buildPathFromElement(rect1), buildPathFromElement(circle0)));\n    }\n  },\n  toolbar: {\n    switchTool,\n    switchShapeType\n  },\n  documents: {\n    newDocument: {\n      openNewDocument,\n      closeNewDocument,\n      createDocumentWithInputs\n    }\n  },\n  initialize: function () {\n    initializeTools();\n    initializeEditor();\n    console.log(0);\n  },\n  secondlyInitialize: function () {\n    loadCSS('https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@100..900&display=swap', 'noto_sans_tc');\n    loadCSS('https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200', 'material_symbols');\n  }\n};\n\nexport default window.vector;\n","export const { v4: uuidv4 } = require('uuid');\n"],"names":["buildPolygon","points","fill","stroke","strokeWidth","strokeDasharray","strokeLinecap","strokeLinejoin","transform","opacity","visibility","id","uuidv4","type","buildPolyline","buildRect","x","y","width","height","rx","ry","buildPlane","root","elements","subPlanes","renderPlaneAsXML","plane","config","concat","renderElements","result","renderTransform","flattenTransform","transformationMatrix","createTransformationMatrix","transformLength","length","i","_transform$i","push","deg","join","renderPoints","map","point","renderRect","rect","rectWidth","Math","abs","rectHeight","rectX","rectY","exceptID","renderCircle","circle","cx","cy","r","renderEllipse","ellipse","renderLine","line","x1","y1","x2","y2","renderPolyline","polyline","renderPolygon","polygon","renderPath","path","d","_step","_iterator","_createForOfIteratorHelper","s","n","done","command","value","xAxisRotation","largeArcFlag","sweepFlag","err","e","f","renderD","_step2","_iterator2","_element","element","_step3","_iterator3","createSkewXMatrix","skewX","rad","PI","tan","createSkewYMatrix","skewY","multiplyMatrices","a","b","j","k","rotate","scale","translate","identityMatrix","cos","sin","transformPoints","matrix","applyTransformationMatrix","newDocumentElement","document","querySelector","newDocumentModalOverlayElement","lazyCSS","noto_sans_tc","material_symbols","loadCSS","url","identifier","link","createElement","setAttribute","head","appendChild","window","vector","test","plane0","rect0","plane1","rect1","circle0","buildCircle","console","log","JSON","stringify","p","buildPathFromElement","P","samplePath","findPathIntersections","toolbar","switchTool","switchShapeType","documents","newDocument","openNewDocument","closeNewDocument","createDocumentWithInputs","name","String","parseInt","creation","createVectorDocument","openDocument","initialize","initializeTools","initializeEditor","secondlyInitialize","require","v4"],"sourceRoot":""}