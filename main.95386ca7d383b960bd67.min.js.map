{"version":3,"file":"main.95386ca7d383b960bd67.min.js","mappings":"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","sources":["webpack://vector/webpack/universalModuleDefinition","webpack://vector/webpack/bootstrap","webpack://vector/webpack/runtime/define property getters","webpack://vector/webpack/runtime/hasOwnProperty shorthand","webpack://vector/./src/graphic/transformation/index.ts","webpack://vector/./src/graphic/render/index.ts","webpack://vector/./src/index.ts","webpack://vector/./src/graphic/plane/index.ts","webpack://vector/./src/graphic/elements/rect.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vector\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vector\"] = factory();\n\telse\n\t\troot[\"vector\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { translate, scale, rotate, skewX, skewY, matrix, rad, transform, coordinate } from '../attributes/index.ts';\n\nexport function createTranslationMatrix(translate: translate): matrix {\n  return [\n    [1, 0, translate.x],\n    [0, 1, translate.y],\n    [0, 0, 1]\n  ];\n}\n\nexport function createScalingMatrix(scale: scale): matrix {\n  return [\n    [scale.x, 0, 0],\n    [0, scale.y, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createRotationMatrix(rotate: rotate): matrix {\n  const rad: rad = (rotate.deg * Math.PI) / 180;\n  return [\n    [Math.cos(rad), -Math.sin(rad), 0],\n    [Math.sin(rad), Math.cos(rad), 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createSkewXMatrix(skewX: skewX): matrix {\n  const rad: rad = (skewX.deg * Math.PI) / 180;\n  return [\n    [1, Math.tan(rad), 0],\n    [0, 1, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function createSkewYMatrix(skewY: skewY): matrix {\n  const rad: rad = (skewY.deg * Math.PI) / 180;\n  return [\n    [1, 0, 0],\n    [Math.tan(rad), 1, 0],\n    [0, 0, 1]\n  ];\n}\n\nexport function multiplyMatrices(a: matrix, b: matrix): matrix {\n  var result: matrix = [\n    [0, 0, 0],\n    [0, 0, 0],\n    [0, 0, 0]\n  ];\n\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      for (let k = 0; k < 3; k++) {\n        result = result.splice(i, 1, result[i].splice(j, 1, result[i][j] + a[i][k] * b[k][j]));\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function createTransformationMatrix(transform: transform): matrix {\n  var identityMatrix: matrix = [\n    [1, 0, 0],\n    [0, 1, 0],\n    [0, 0, 1]\n  ];\n  var transformLength = transform.length;\n\n  for (var i = 0; i < transformLength; i++) {\n    var transformationMatrix: matrix;\n    switch (transform[i]?.type) {\n      case 'translate':\n        transformationMatrix = createTranslationMatrix(transform[i]);\n        break;\n      case 'scale':\n        transformationMatrix = createScalingMatrix(transform[i]);\n        break;\n      case 'rotate':\n        transformationMatrix = createRotationMatrix(transform[i]);\n        break;\n      case 'skewX':\n        transformationMatrix = createSkewXMatrix(transform[i]);\n        break;\n      case 'skewY':\n        transformationMatrix = createSkewYMatrix(transform[i]);\n        break;\n      default:\n        transformationMatrix = [\n          [1, 0, 0],\n          [0, 1, 0],\n          [0, 0, 1]\n        ];\n        break;\n    }\n    identityMatrix = multiplyMatrices(transformationMatrix, identityMatrix);\n  }\n  return identityMatrix; // return a new \"identity\" matrix\n}\n\nexport function transformPoints(points: coordinate[], transform: transform): coordinate[] {\n  function applyTransformationMatrix(matrix: matrix, point: coordinate): coordinate {\n    const [x, y, _] = [matrix[0][0] * point.x + matrix[0][1] * point.y + matrix[0][2], matrix[1][0] * point.x + matrix[1][1] * point.y + matrix[1][2], 1];\n    return { x, y };\n  }\n  const transformationMatrix = createTransformationMatrix(transform);\n  return points.map((point) => applyTransformationMatrix(transformationMatrix, point));\n}\n","import { plane } from '../plane/index.ts';\nimport { rect } from '../elements/rect.ts';\nimport { createTransformationMatrix } from '../transformation/index.ts';\n\ninterface renderConfig {\n  flattenTransform: boolean;\n}\n\nexport function renderPlaneAsXML(plane: plane, config: renderConfig): string {\n  var result = '';\n  function renderTransform(transform: transform, config: renderConfig): string {\n    if (renderConfig.flattenTransform) {\n      var transformationMatrix = createTransformationMatrix(transform);\n      var result = `matrix(${transformationMatrix[0][0]},${transformationMatrix[1][0]},${transformationMatrix[0][1]},${transformationMatrix[1][1]},${transformationMatrix[0][2]},${transformationMatrix[1][2]})`;\n      return result;\n    } else {\n      var result = [];\n      var transformLength = transform.length;\n      for (var i = 0; i < transformLength; i++) {\n        switch (transform[i]?.type) {\n          case 'translate':\n            result.push(`translate(${transform[i].x},${transform[i].y})`);\n            break;\n          case 'scale':\n            result.push(`scale(${transform[i].x},${transform[i].y})`);\n            break;\n          case 'rotate':\n            result.push(`rotate(${transform[i].deg})`);\n            break;\n          case 'skewX':\n            result.push(`skewX(${transform[i].deg})`);\n            break;\n          case 'skewY':\n            result.push(`skewY(${transform[i].deg})`);\n            break;\n          default:\n            break;\n        }\n      }\n      return result.join(' ');\n    }\n  }\n  function renderRect(rect: rect, plane: plane): string {\n    return `<rect x=\"${rect.x + plane.x}\" y=\"${rect.y + plane.y}\" width=\"${rect.width}\" height=\"${rect.height}\" rx=\"${rect.rx}\" ry=\"${rect.ry}\" stroke=\"${rect.stroke}\" stroke-dasharray=\"${rect.strokeDasharray}\" stroke-linecap=\"${rect.strokeLinecap}\" stroke-linejoin=\"${rect.strokeLinejoin}\" transform=\"${renderTransform(rect.transform, config)}\" opacity=\"${rect.opacity}\" visibility=\"${rect.visibility}\" />`;\n  }\n  for (var element of plane.elements) {\n    switch (element?.type) {\n      case 'rect':\n        result += renderRect(element, plane);\n        break;\n      default:\n        break;\n    }\n  }\n  return result;\n}\n","import { createTransformationMatrix, transformPoints } from './graphic/transformation/index.ts';\nimport { buildRect } from './graphic/elements/rect.ts';\nimport { buildPlane } from './graphic/plane/index.ts';\nimport { renderPlaneAsXML } from './graphic/render/index.ts';\n\nwindow.vector = {\n  test: {\n    createTransformationMatrix,\n    transformPoints,\n    r: function () {\n      var plane0 = buildPlane(5, 40, 300, 300);\n      var rect0 = buildRect(10, 20, 50, 80, 15, 15, '#000');\n      plane0.elements.push(rect0);\n      console.log(\n        renderPlaneAsXML(plane0, {\n          flattenTransform: true\n        })\n      );\n    }\n  },\n  initialize: function () {\n    console.log(0);\n  }\n};\n\nexport default window.vector;\n","import { rect } from '../elements/rect.ts';\nimport { circle } from '../elements/circle.ts';\n\nexport interface plane {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  elements: (rect | circle)[];\n  subPlanes: plane[];\n  type: 'plane';\n}\n\nexport function buildPlane(x, y, width, height, elements): plane {\n  return {\n    x: x || 0,\n    y: y || 0,\n    width: width || 0,\n    height: height || 0,\n    elements: elements || [],\n    subPlanes: [],\n    type: 'plane'\n  };\n}\n","import { x, y, width, height, rx, ry, fill, stroke, strokeWidth, strokeDasharray, strokeLinecap, strokeLinejoin, opacity, visibility, transform, elementType } from '../attributes/index.ts';\n\nexport interface rect {\n  x: x;\n  y: y;\n  width: width;\n  height: height;\n  rx?: rx;\n  ry?: ry;\n\n  fill?: fill;\n  stroke?: stroke;\n  strokeWidth?: strokeWidth;\n  strokeDasharray?: strokeDasharray;\n  strokeLinecap?: strokeLinecap;\n  strokeLinejoin?: strokeLinejoin;\n\n  transform?: transform; // Transformations applied to the rectangle\n  opacity?: opacity;\n  visibility?: visibility;\n  type: elementType;\n}\n\nexport function buildRect(x: x, y: y, width: width, height: height, rx: rx, ry: ry, fill: fill, stroke: stroke, strokeWidth: strokeWidth, strokeDasharray: strokeDasharray, strokeLinecap: strokeLinecap, strokeLinejoin: strokeLinejoin, transform: transform, opacity: opacity, visibility: visibility): rect {\n  return {\n    x: x || 0,\n    y: y || 0,\n    width: width || 0,\n    height: height || 0,\n    rx: rx || 0,\n    ry: ry || 0,\n    fill: fill || 'none',\n    stroke: stroke || 'none',\n    strokeWidth: strokeWidth || 0,\n    strokeDasharray: strokeDasharray || '',\n    strokeLinecap: strokeLinecap || 'butt',\n    strokeLinejoin: strokeLinejoin || 'miter',\n    transform: transform || [],\n    opacity: opacity || 1,\n    visibility: visibility || 'visible',\n    type: 'rect'\n  };\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","createSkewXMatrix","skewX","rad","deg","Math","PI","tan","createSkewYMatrix","skewY","multiplyMatrices","a","b","result","i","j","k","splice","createTransformationMatrix","transform","rotate","scale","translate","identityMatrix","transformLength","length","_transform$i","transformationMatrix","type","x","y","cos","sin","renderPlaneAsXML","plane","config","renderRect","rect","concat","width","height","rx","ry","stroke","strokeDasharray","strokeLinecap","strokeLinejoin","renderConfig","flattenTransform","push","join","renderTransform","opacity","visibility","_step","_iterator","_createForOfIteratorHelper","elements","s","n","done","_element","element","value","err","e","f","window","vector","test","transformPoints","points","map","point","matrix","applyTransformationMatrix","r","plane0","subPlanes","rect0","fill","strokeWidth","buildRect","console","log","initialize"],"sourceRoot":""}